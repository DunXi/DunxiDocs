import{_ as a,c as e,o as r,e as i}from"./app.86747af1.js";const m=JSON.parse('{"title":"Linux笔记","description":"","frontmatter":{},"headers":[{"level":2,"title":"硬件设备","slug":"硬件设备","link":"#硬件设备","children":[{"level":3,"title":"绝对路径","slug":"绝对路径","link":"#绝对路径","children":[]},{"level":3,"title":"相对路径","slug":"相对路径","link":"#相对路径","children":[]},{"level":3,"title":"查看文件或目录信息","slug":"查看文件或目录信息","link":"#查看文件或目录信息","children":[]},{"level":3,"title":"创建目录","slug":"创建目录","link":"#创建目录","children":[]},{"level":3,"title":"创建文件","slug":"创建文件","link":"#创建文件","children":[]},{"level":3,"title":"复制文件或目录","slug":"复制文件或目录","link":"#复制文件或目录","children":[]},{"level":3,"title":"删除文件或目录","slug":"删除文件或目录","link":"#删除文件或目录","children":[]},{"level":3,"title":"移动文件","slug":"移动文件","link":"#移动文件","children":[]},{"level":3,"title":"查看文件内容","slug":"查看文件内容","link":"#查看文件内容","children":[]},{"level":3,"title":"查找文件或目录","slug":"查找文件或目录","link":"#查找文件或目录","children":[]},{"level":3,"title":"打包","slug":"打包","link":"#打包","children":[]},{"level":3,"title":"进程","slug":"进程","link":"#进程","children":[]}]}],"relativePath":"network/Linux.md","lastUpdated":1677036416000}'),h={name:"network/Linux.md"},d=i(`<h1 id="linux笔记" tabindex="-1">Linux笔记 <a class="header-anchor" href="#linux笔记" aria-hidden="true">#</a></h1><p>操作系统：windows、鸿蒙、linux Unix操作，第一个操作系统 开源：所有人都可以看到源代码 计算机只能处理二进制：0、1 汇编语言： 就是通过0和1进行编写，最接近与个人计算机的变成语言，缺点： 编写的程序在别的计算机上可能无法运行 高级语言：C语言、Python 编译：我们的命令转成0、1 minux：缩小版的unix 使用C语言编写 Linux操作系统：TCP/IP协议栈 协议栈：很多协议组成 上网 TCP/IPv4 IP地址 GNU计划：论坛 自己开发程序发表 开发程序使用： saasasa 程序就必须免费开放出来 游戏：王者 服务器（性能强大的计算机）2个CPU 16个硬盘 8个内存条windows seve Linux托马斯开发内核 更改一下内核、开发一些程序 新的操作系统 rule 8.2 9测试版 红帽公司开发 centos 普通用户: 具有一定的权限 超级用户：root 具有完整的权限<br> ctrl shift + 字体放大 ctrl - 字体缩小 LInux系统中所有的东西都是以文件夹（目录）的形式表示</p><h2 id="硬件设备" tabindex="-1">硬件设备 <a class="header-anchor" href="#硬件设备" aria-hidden="true">#</a></h2><p>普通用户的家目录就是存放这个用户信息的文件夹 root是管理员的家目录 home是普通用户的家目录 Linux操作系统中选中即复制 按下鼠标滚轮粘贴 [zdx @localhost /] 用户名 主机名 当前所处的位置 Linux中的命令是可以补全 Tab补全命令</p><h5 id="更改主机名命令-hostname" tabindex="-1">更改主机名命令：hostname <a class="header-anchor" href="#更改主机名命令-hostname" aria-hidden="true">#</a></h5><p>​ 临时更改主机名（关机失效）</p><p>输入 bash立即生效</p><p>重新登录生效 su - 切换用户权限 hostnamectl set-hostname 2102 （关机后仍然生效） nmtui 进入网络的伪图形化界面<br> ip addr 查看IP地址 IP地址：在网络中相当于你的位置信息（标识） 通过二进制（0-1）和十进制（0-9）表示 IP地址：192.168.1.1 两部分组成：网络位和主机位 网络位：用来表示一个范围 主机位用来表示某个主机 子网掩码：用来区分IP地址的网络位和主机位 网络地址、广播地址 主机位为0 主机位为255 IP地址 192.168 .1 .1 子网掩码 255.255.255 .0 子网掩码255的地方对应上方IP地址同样的位置就是网络位 0的地方对应上方IP地址同样的位置就是主机位 设置网络：1、虚拟机：编辑---虚拟网络编辑器，选择NAT 取消DHCP 192.168.2.0 子网掩码设置成255.255.255.0 192.168.2.0 255.255.255.0 虚拟网络编辑器192.168.2.200 IP地址192.168.2.254 网关shell 命令的解释器 将用户的命令解释成计算机可以识别的 ping命令 测试网络连通性 常用的命令:Tab键：自动补齐快捷键 Ctrl+L：清屏反斜杠“\\”：强制换行快捷键 Ctrl+C：取消本次命令编辑 linux命令格式：命令字 [选项] [参数] 多个短格式选项可以写在一起，只用一个“-”引导，例如“-al” pwd 查看所在位置 打印当前所处位置</p><h1 id="指令" tabindex="-1">指令 <a class="header-anchor" href="#指令" aria-hidden="true">#</a></h1><p>vim编辑器，蓝色代表文件夹，白色代表文件</p><h3 id="绝对路径" tabindex="-1">绝对路径 <a class="header-anchor" href="#绝对路径" aria-hidden="true">#</a></h3><p>​ 从根目录开始切换， 例子：cd /home/zdx</p><h3 id="相对路径" tabindex="-1">相对路径 <a class="header-anchor" href="#相对路径" aria-hidden="true">#</a></h3><p>​ 相对情况下切换，不从根目录开始切换，只能切换当前目录下的文件夹，必须存在父目录 例子：cd zdx/qwe</p><h3 id="查看文件或目录信息" tabindex="-1">查看文件或目录信息 <a class="header-anchor" href="#查看文件或目录信息" aria-hidden="true">#</a></h3><h4 id="ls指令" tabindex="-1">ls指令 <a class="header-anchor" href="#ls指令" aria-hidden="true">#</a></h4><p>ls +选项 目录名 不加目录名，查看当前目录下的内容</p><p>-l 查看当前目录下的文件或目录详细参数 可以缩写为ll</p><p>-a 显示隐藏文件或目录 文件或目录前带有.代表隐藏文件或目录</p><p>-d 查看当前目录 可以和其他选项使用 例子： ls -dl 查看当前目录本身的详细信息</p><p>--color 例子 ls --color=none 查看当前目录下内容，不带颜色</p><h3 id="创建目录" tabindex="-1">创建目录 <a class="header-anchor" href="#创建目录" aria-hidden="true">#</a></h3><h4 id="mkdir指令" tabindex="-1">mkdir指令 <a class="header-anchor" href="#mkdir指令" aria-hidden="true">#</a></h4><p>mkdir + 目录名 -p迭代创建</p><p>创建一个sz文件夹下面再创建一个xxjs</p><p>mkdir sz/xxjs -p</p><h3 id="创建文件" tabindex="-1">创建文件 <a class="header-anchor" href="#创建文件" aria-hidden="true">#</a></h3><h4 id="touch指令" tabindex="-1">touch指令 <a class="header-anchor" href="#touch指令" aria-hidden="true">#</a></h4><p>格式：touch + 名称 创建相同名称的文件，会刷新创建时间</p><h3 id="复制文件或目录" tabindex="-1">复制文件或目录 <a class="header-anchor" href="#复制文件或目录" aria-hidden="true">#</a></h3><h4 id="cp命令" tabindex="-1">cp命令 <a class="header-anchor" href="#cp命令" aria-hidden="true">#</a></h4><p>格式 cp 源位置 目标位置</p><p>选项: -r 同时复制目录下的内容 严格区分大小写</p><h3 id="删除文件或目录" tabindex="-1">删除文件或目录 <a class="header-anchor" href="#删除文件或目录" aria-hidden="true">#</a></h3><h4 id="rm命令" tabindex="-1">rm命令 <a class="header-anchor" href="#rm命令" aria-hidden="true">#</a></h4><p>格式：rm + 要删除的项目</p><p>默认会询问是否删除</p><p>选项：-f 直接删除 -r 指定删除目录下的内容</p><p>例子： rm /home/zdx/2102 -rf 直接删除/home/zdx/2102目录及内容</p><h4 id="rmdir命令" tabindex="-1">rmdir命令 <a class="header-anchor" href="#rmdir命令" aria-hidden="true">#</a></h4><p>专门用来删除目录的 例子 ：rmdir /home/xwx/1</p><h3 id="移动文件" tabindex="-1">移动文件 <a class="header-anchor" href="#移动文件" aria-hidden="true">#</a></h3><h4 id="mv命令" tabindex="-1">mv命令 <a class="header-anchor" href="#mv命令" aria-hidden="true">#</a></h4><p>移动</p><p>mv 源位置 目标位置</p><p>移动目录不需要加-r选项</p><h3 id="查看文件内容" tabindex="-1">查看文件内容 <a class="header-anchor" href="#查看文件内容" aria-hidden="true">#</a></h3><h4 id="cat命令" tabindex="-1">cat命令 <a class="header-anchor" href="#cat命令" aria-hidden="true">#</a></h4><p>cat &gt; 文件名 写入文件内容</p><p>cat 文件名,查看文件全部内容 正序显示</p><h4 id="tac命令" tabindex="-1">tac命令 <a class="header-anchor" href="#tac命令" aria-hidden="true">#</a></h4><p>tac 文件名 查看文件全部内容 倒序显示</p><h4 id="less命令" tabindex="-1">less命令 <a class="header-anchor" href="#less命令" aria-hidden="true">#</a></h4><p>less 文件名</p><p>以分屏的形式查看文件内容</p><p>​ 按空格向下翻页，按B向上翻页，按Q退出查看</p><h4 id="more命令" tabindex="-1">more命令 <a class="header-anchor" href="#more命令" aria-hidden="true">#</a></h4><p>​ 以分页形式显示文件内容</p><h4 id="head-命令" tabindex="-1">head 命令 <a class="header-anchor" href="#head-命令" aria-hidden="true">#</a></h4><p>查看文件内容的前n行</p><p>默认不加参数为查看前10行</p><p>格式：head 选项 文件名</p><p>选项：-n (n:行数)</p><h4 id="tail命令" tabindex="-1">tail命令 <a class="header-anchor" href="#tail命令" aria-hidden="true">#</a></h4><p>查看文件的后几行</p><p>tail 选项 文件名</p><p>默认加选项查看内容的后10行</p><p>格式：tail 选项 文件名</p><p>选项：-n (n:行数)</p><h3 id="查找文件或目录" tabindex="-1">查找文件或目录 <a class="header-anchor" href="#查找文件或目录" aria-hidden="true">#</a></h3><h4 id="find命令" tabindex="-1">find命令 <a class="header-anchor" href="#find命令" aria-hidden="true">#</a></h4><p>格式：find 查找范围 查找条件</p><p>常用查找条件</p><p>-name：按文件名称查找</p><p>-user：文件属性查找</p><p>-type：按文件类型查找</p><p>​ 逻辑与：-a 默认</p><p>​ 例子：find / -name &#39;a*&#39; -type f</p><p>​ 逻辑或：-o 加到两个条件之间</p><p>​ 例子：find /etc/ -name &#39;a*&#39; -o -name &#39;b*&#39;</p><p>​ 逻辑非：! 加到条件前</p><p>​ 例子：find / ! -name &#39;a*&#39;</p><h4 id="grep命令" tabindex="-1">grep命令 <a class="header-anchor" href="#grep命令" aria-hidden="true">#</a></h4><h4 id="命令历史" tabindex="-1">命令历史 <a class="header-anchor" href="#命令历史" aria-hidden="true">#</a></h4><h5 id="_1000条-history" tabindex="-1">1000条 history <a class="header-anchor" href="#_1000条-history" aria-hidden="true">#</a></h5><p>​ ！n 执行第n条命令 ​ 清除历史命令 ​ 执行：history -c</p><h5 id="alias-命令别名" tabindex="-1">alias 命令别名 <a class="header-anchor" href="#alias-命令别名" aria-hidden="true">#</a></h5><p>为使用频率较高的复杂命令行设置简短的调用名称 设置命令别名 alias 别名=‘源命令’ 删除别名 unalias 别名 删除所有别名 unalias -a‘</p><p>重定向标准输出：&gt; 清空指定文件的内容，将命令的执行结果输出到指定的文件中，而不是直接显示在屏幕上 例子：ls -al &gt; /root/abcd &gt;&gt;将命令执行的结果追加输出到指定文件 例子： cat /root/initial-setup-ks.cfg &gt;&gt; /root/abcd</p><pre><code> 标准错误    2&gt;  清空指定文件的内容，将命令的错误结果输出到指定的文件中，而不是直接显示在屏幕上 
                  2&gt;&gt;  将命令的错误结果追加输出到指定文件


输出和错误     &amp;&gt;  将标准输出、标准错误的内容全部保存到指定的文件中，而不是直接显示在屏幕上


wc   字数统计          wc   文件名
</code></pre><p>输出结果 第一个 行数 第二 字数、单词数 第三个 字符数</p><p>选项 -l 行数 -w 字数 -c 字符数</p><p>| 将上一个命令的输出结果作为第二个命令的输入</p><p>例子：grep &#39;a*&#39; /etc/passwd | wc 查找etc/passwd中a*所在行 ，将输出结果作为wc的输出，进行统计</p><h3 id="打包" tabindex="-1">打包 <a class="header-anchor" href="#打包" aria-hidden="true">#</a></h3><h4 id="tar-命令" tabindex="-1">tar 命令 <a class="header-anchor" href="#tar-命令" aria-hidden="true">#</a></h4><p>tar 打包 格式 ： tar + 选项 打包文件名 源文件或源目录</p><p>选项： -c 创建打包文件 -x 还原打包文件 -v 显示进度 -C 指定还原打包文件的位置 tar -xf /opt/sz.zip -C /tar/ -z gzip格式的打包 -j bz2格式的打包 -t 查看打包文件 tar -tf /opt/sz.zip -f 指定打包文件 在创建压缩包的时候只要需要名字，就要有-f，并且f放在最后，用于指定后面的文件名</p><pre><code>    注意：1、解压缩时解压出的是压缩文件的父目录    例子：压缩/home/1234   ，当解压缩时还原出的是/home目录
               2、压缩文件加后缀名
</code></pre><p>例子：tar -cf 2102linux.tar /root/2102 将root/2102进行打包，打包文件名为2102linux tar -cvf 2102linux.tar /root/2102 /root/2101 tar -xvf 2102.linux.tar</p><pre><code> 压缩        tar  -cjvf      mn.bz2       /home/xwx/anbi            解压缩：tar   -xjvf      mn.bz2         
 
  解压缩 ：tar -xf /root/2102linux.tar  -C /opt/  





vim  编辑器            编辑Linux系统中的各种配置文件
</code></pre><p>三种模式：命令模式、输入模式、末行模式 首先是命令模式，进入输入模式输入a、i、o ，随便编辑 进入末行模式输入：</p><pre><code>输入、末行返回命令模式，ESC
</code></pre><p>使用vim编辑器 ，格式：vim + 文件名 Ctrl+F 向下翻动一整页内容 Ctrl+B 向上翻动一整页内容</p><pre><code>root用户的UID和GID都为0
</code></pre><p>组账户：基本组、附加组 基本组：一个用户一个，root 基本组：root 附加组：一个用户可以有多个</p><p>aaa a,b,c,,d</p><pre><code> 用户账号文件       /etc/passwd
</code></pre><p>每一行存放一个用户的基本信息</p><p><img src="https://bed-1309358403.cos.ap-shanghai.myqcloud.com/img/image-20221214113435769.png" alt="image-20221214113435769"></p><h3 id="进程" tabindex="-1">进程 <a class="header-anchor" href="#进程" aria-hidden="true">#</a></h3><p>程序是静态存储的代码</p><p>进程是动态执行的代码</p><p><img src="https://bed-1309358403.cos.ap-shanghai.myqcloud.com/img/image-20221214085605118.png" alt="image-20221214085605118"></p><p>操作系统的进程，把他杀掉 系统就会重启</p>`,115),n=[d];function t(p,l,s,c,o,u){return r(),e("div",null,n)}const f=a(h,[["render",t]]);export{m as __pageData,f as default};
