import{_ as s,c as n,o as a,a as e}from"./app.450482b3.js";const u=JSON.parse('{"title":"nginx简介及环境准备","description":"","frontmatter":{},"headers":[{"level":3,"title":"缓冲（buffer）","slug":"缓冲-buffer","link":"#缓冲-buffer","children":[]},{"level":3,"title":"缓存（cache）","slug":"缓存-cache","link":"#缓存-cache","children":[]},{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":3,"title":"配置服务组","slug":"配置服务组","link":"#配置服务组","children":[]},{"level":3,"title":"负载均衡策略","slug":"负载均衡策略","link":"#负载均衡策略","children":[]},{"level":3,"title":"生成证书","slug":"生成证书","link":"#生成证书","children":[]},{"level":3,"title":"配置ssl","slug":"配置ssl","link":"#配置ssl","children":[]},{"level":3,"title":"https优化","slug":"https优化","link":"#https优化","children":[]},{"level":3,"title":"1.stream","slug":"_1-stream","link":"#_1-stream","children":[]},{"level":3,"title":"2.tcp负载均衡","slug":"_2-tcp负载均衡","link":"#_2-tcp负载均衡","children":[]},{"level":2,"title":"return","slug":"return","link":"#return","children":[{"level":3,"title":"强制所有请求使用Https","slug":"强制所有请求使用https","link":"#强制所有请求使用https","children":[]}]},{"level":2,"title":"转发和重定向","slug":"转发和重定向","link":"#转发和重定向","children":[]},{"level":2,"title":"rewrite","slug":"rewrite","link":"#rewrite","children":[]},{"level":2,"title":"last与break","slug":"last与break","link":"#last与break","children":[{"level":3,"title":"不使用last和break","slug":"不使用last和break","link":"#不使用last和break","children":[]},{"level":3,"title":"使用break","slug":"使用break","link":"#使用break","children":[]},{"level":3,"title":"使用last","slug":"使用last","link":"#使用last","children":[]},{"level":3,"title":"gzip压缩","slug":"gzip压缩","link":"#gzip压缩","children":[]},{"level":3,"title":"sendfile","slug":"sendfile","link":"#sendfile","children":[]},{"level":3,"title":"try_files","slug":"try-files","link":"#try-files","children":[]},{"level":3,"title":"error_page","slug":"error-page","link":"#error-page","children":[]}]},{"level":2,"title":"一、推荐写法","slug":"一、推荐写法","link":"#一、推荐写法","children":[{"level":3,"title":"1.重复的配置可继承自父级","slug":"_1-重复的配置可继承自父级","link":"#_1-重复的配置可继承自父级","children":[]},{"level":3,"title":"2.不要将所有请求都代理到后端服务器","slug":"_2-不要将所有请求都代理到后端服务器","link":"#_2-不要将所有请求都代理到后端服务器","children":[]},{"level":3,"title":"3.若非必要，不要缓存动态请求，只缓存静态文件","slug":"_3-若非必要-不要缓存动态请求-只缓存静态文件","link":"#_3-若非必要-不要缓存动态请求-只缓存静态文件","children":[]},{"level":3,"title":"4.检查文件是否存在使用try_files代替if -f","slug":"_4-检查文件是否存在使用try-files代替if-f","link":"#_4-检查文件是否存在使用try-files代替if-f","children":[]},{"level":3,"title":"5.在重写路径中包含http://或https😕/","slug":"_5-在重写路径中包含http-或https","link":"#_5-在重写路径中包含http-或https","children":[]},{"level":3,"title":"6.保持重写规则简单干净","slug":"_6-保持重写规则简单干净","link":"#_6-保持重写规则简单干净","children":[]}]},{"level":2,"title":"二、注意事项","slug":"二、注意事项","link":"#二、注意事项","children":[{"level":3,"title":"1.正确的配置未生效，请清除浏览器缓存","slug":"_1-正确的配置未生效-请清除浏览器缓存","link":"#_1-正确的配置未生效-请清除浏览器缓存","children":[]},{"level":3,"title":"2.在HTTPS中不启用 SSLv3","slug":"_2-在https中不启用-sslv3","link":"#_2-在https中不启用-sslv3","children":[]},{"level":3,"title":"3.不要将 root 目录配置成 /或 /root。","slug":"_3-不要将-root-目录配置成-或-root。","link":"#_3-不要将-root-目录配置成-或-root。","children":[]},{"level":3,"title":"4.谨慎使用chmod 777","slug":"_4-谨慎使用chmod-777","link":"#_4-谨慎使用chmod-777","children":[]},{"level":3,"title":"5.不要将部署的项目拷贝到默认目录下","slug":"_5-不要将部署的项目拷贝到默认目录下","link":"#_5-不要将部署的项目拷贝到默认目录下","children":[]}]}],"relativePath":"network/Nginx.md","lastUpdated":1696570916000}'),l={name:"network/Nginx.md"},p=e(`<h1 id="nginx简介及环境准备" tabindex="-1"><strong>nginx简介及环境准备</strong> <a class="header-anchor" href="#nginx简介及环境准备" aria-hidden="true">#</a></h1><h4 id="一、nginx简介" tabindex="-1">一、nginx简介 <a class="header-anchor" href="#一、nginx简介" aria-hidden="true">#</a></h4><p>Nginx是一款轻量级的Web服务器、反向代理服务器，由于它的内存占用少，启动极快，高并发能力强，在互联网项目中广泛应用。</p><p>本课程包含以下内容：</p><p>1.nginx 安装</p><p>2.配置静态web</p><p>3.HTTP反向代理</p><p>4.动静分离</p><p>5.缓冲和缓存</p><p>6.负载均衡</p><p>7.URL重写</p><p>8.TCP反向代理</p><p>9.HTTPS配置</p><h4 id="二、环境准备" tabindex="-1">二、环境准备 <a class="header-anchor" href="#二、环境准备" aria-hidden="true">#</a></h4><p>本课程的重点是nginx的使用，为了方便大家学习，而不是把大量时间花费在环境搭建过程中，本课程提供了虚拟机镜像，基于Centos7，网盘链接: <a href="https://pan.baidu.com/s/1NmCR-vdAcZLouRRn9V1yTA" target="_blank" rel="noreferrer">https://pan.baidu.com/s/1NmCR-vdAcZLouRRn9V1yTA</a> 密码: 1b60</p><ul><li>使用说明：</li></ul><p>用户名/密码：root/123456，课程中使用的环境和应用放置在/home目录下</p><table><thead><tr><th><strong>目录</strong></th><th><strong>简介</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>AdminLTE-3.2.0</td><td>静态web后台管理系统</td><td>静态web的配置演示</td></tr><tr><td>apps/ruoyi-admin.jar</td><td>若依后台管理系统，基于springboot</td><td>方向代理演示</td></tr><tr><td>apache-tomcat-8.5.81apps/ruoyi-admin.war</td><td>javaweb服务器</td><td>动静分离演示</td></tr><tr><td>sql/ry_20210924.sqlsql/quartz.sql</td><td>数据库初始化脚本</td><td>创建若依后台数据库</td></tr><tr><td>mysql5.7</td><td>数据库</td><td>用户名/密码：root/123456</td></tr><tr><td>open-JDK 1.8</td><td>java运行环境</td><td>已安装</td></tr></tbody></table><h4 id="三、下载地址" tabindex="-1">三、下载地址 <a class="header-anchor" href="#三、下载地址" aria-hidden="true">#</a></h4><p>如果不需要虚拟机，大家也可以自行下载安装。</p><ul><li>AdminLTE</li></ul><p>官方网址：<a href="https://adminlte.io/" target="_blank" rel="noreferrer">https://adminlte.io/</a></p><p>源码下载：<a href="https://codeload.github.com/ColorlibHQ/AdminLTE/tar.gz/refs/tags/v3.2.0" target="_blank" rel="noreferrer">https://codeload.github.com/ColorlibHQ/AdminLTE/tar.gz/refs/tags/v3.2.0</a></p><p>一个静态web后台管理系统</p><ul><li>RuoYi</li></ul><p>一个基于Spring Boot的后台管理系统</p><p>说明文档：<a href="http://doc.ruoyi.vip/ruoyi/" target="_blank" rel="noreferrer">http://doc.ruoyi.vip/ruoyi/</a></p><p>源码下载：<a href="https://codeload.github.com/yangzongzhuan/RuoYi/zip/refs/tags/v4.7.4" target="_blank" rel="noreferrer">https://codeload.github.com/yangzongzhuan/RuoYi/zip/refs/tags/v4.7.4</a></p><p>也可以从网盘中获取打包好的ruoyi-admin.jar和ruoyi-admin.war</p><p>网盘链接: <a href="https://pan.baidu.com/s/1NmCR-vdAcZLouRRn9V1yTA" target="_blank" rel="noreferrer">https://pan.baidu.com/s/1NmCR-vdAcZLouRRn9V1yTA</a> 密码: 1b60</p><ul><li>open-JDK 1.8</li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#B392F0;">yum</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">java-1.8.0-openjdk.x86_64</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">java-1.8.0-openjdk-devel.x86_64</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>tomcat 8.5</li></ul><p>官方网址：<a href="https://tomcat.apache.org/" target="_blank" rel="noreferrer">https://tomcat.apache.org/</a></p><p>下载地址：<a href="https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.81/bin/apache-tomcat-8.5.81.tar.gz" target="_blank" rel="noreferrer">https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.81/bin/apache-tomcat-8.5.81.tar.gz</a></p><ul><li>mysql 5.7</li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#B392F0;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/etc/yum.repos.d/mysql-community.repo</span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#9ECBFF;">EOF</span></span>
<span class="line"><span style="color:#9ECBFF;">[mysql57-community]</span></span>
<span class="line"><span style="color:#9ECBFF;">name=MySQL 5.7 Community Server</span></span>
<span class="line"><span style="color:#9ECBFF;">baseurl=http://repo.mysql.com/yum/mysql-5.7-community/el/</span><span style="color:#79B8FF;">\\$</span><span style="color:#9ECBFF;">releasever/</span><span style="color:#79B8FF;">\\$</span><span style="color:#9ECBFF;">basearch/</span></span>
<span class="line"><span style="color:#9ECBFF;">enabled=1</span></span>
<span class="line"><span style="color:#9ECBFF;">gpgcheck=1</span></span>
<span class="line"><span style="color:#9ECBFF;">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql-2022</span></span>
<span class="line"><span style="color:#9ECBFF;">       file:///etc/pki/rpm-gpg/RPM-GPG-KEY-mysql</span></span>
<span class="line"><span style="color:#9ECBFF;">EOF</span></span>
<span class="line"><span style="color:#B392F0;">rpm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://repo.mysql.com/RPM-GPG-KEY-mysql-</span><span style="color:#79B8FF;">2022</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">yum</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mysql-community-server</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mysqld</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mysqld</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">grep</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;temporary password&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/var/log/mysqld.log</span></span>
<span class="line"><span style="color:#6A737D;">#A temporary password is generated for root@localhost: m9cpkdkLEX</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">mysql</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-uroot</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">ALTER</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">USER</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;root&#39;@&#39;localhost&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">IDENTIFIED</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">BY</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;MyNewPass4!&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>修改简单的密码</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#B392F0;">SHOW</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">VARIABLES</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">LIKE</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;validate_password%&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">GLOBAL</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">validate_password_policy</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">LOW</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">GLOBAL</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">validate_password_length</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">ALTER</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">USER</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;root&#39;@&#39;localhost&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">IDENTIFIED</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">BY</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;123456&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h1 id="_1-安装与启动" tabindex="-1"><strong>1.安装与启动</strong> <a class="header-anchor" href="#_1-安装与启动" aria-hidden="true">#</a></h1><p>环境准备：</p><ul><li>Centos 7.4+</li><li>可访问联网</li><li>关闭防火墙</li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#B392F0;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stop</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">firewalld</span></span>
<span class="line"><span style="color:#B392F0;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">disable</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">firewalld</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="_1-使用yum安装" tabindex="-1">1.使用yum安装 <a class="header-anchor" href="#_1-使用yum安装" aria-hidden="true">#</a></h4><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#B392F0;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">yum</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">yum-utils</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">net-tools</span></span>
<span class="line"><span style="color:#B392F0;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/etc/yum.repos.d/nginx.repo</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#9ECBFF;"> EOF</span></span>
<span class="line"><span style="color:#9ECBFF;">[nginx-stable]</span></span>
<span class="line"><span style="color:#9ECBFF;">name=nginx stable repo</span></span>
<span class="line"><span style="color:#9ECBFF;">baseurl=http://nginx.org/packages/centos/</span><span style="color:#79B8FF;">\\$</span><span style="color:#9ECBFF;">releasever/</span><span style="color:#79B8FF;">\\$</span><span style="color:#9ECBFF;">basearch/</span></span>
<span class="line"><span style="color:#9ECBFF;">gpgcheck=1</span></span>
<span class="line"><span style="color:#9ECBFF;">enabled=1</span></span>
<span class="line"><span style="color:#9ECBFF;">gpgkey=https://nginx.org/keys/nginx_signing.key</span></span>
<span class="line"><span style="color:#9ECBFF;">module_hotfixes=true</span></span>
<span class="line"><span style="color:#9ECBFF;">EOF</span></span>
<span class="line"><span style="color:#B392F0;">sudo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">yum</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nginx</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="_2-常用命令" tabindex="-1">2.常用命令 <a class="header-anchor" href="#_2-常用命令" aria-hidden="true">#</a></h4><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#B392F0;">nginx</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#立即停止</span></span>
<span class="line"><span style="color:#B392F0;">nginx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stop</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#执行完当前请求再停止</span></span>
<span class="line"><span style="color:#B392F0;">nginx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">quit</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#重新加载配置文件，相当于restart</span></span>
<span class="line"><span style="color:#B392F0;">nginx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">reload</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#将日志写入一个新的文件</span></span>
<span class="line"><span style="color:#B392F0;">nginx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-s</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">reopen</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#测试配置文件</span></span>
<span class="line"><span style="color:#B392F0;">nginx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-t</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>日志位于<code>/var/log/nginx/</code></p><h4 id="_3-使用systemctl启动、停止、重新加载" tabindex="-1">3.使用systemctl启动、停止、重新加载 <a class="header-anchor" href="#_3-使用systemctl启动、停止、重新加载" aria-hidden="true">#</a></h4><p>注意：在centos 7中，用systemctl启动nginx可能出现如下错误，</p><p>nginx: [emerg] bind() to 0.0.0.0:8000 failed (13: Permission denied)</p><p>这是由于selinux的安全策略引起的。解决方法如下：</p><ul><li>setenforce 0 （临时）</li><li>修改/etc/selinux/config，设置SELINUX=disabled （永久有效，需重启）</li></ul><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nginx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nginx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#产看日志</span></span>
<span class="line"><span style="color:#B392F0;">journalctl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-xe</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stop</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nginx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">reload</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nginx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#配置开机启动</span></span>
<span class="line"><span style="color:#B392F0;">systemctl</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">enable</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">nginx</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="_4-配置文件" tabindex="-1">4.配置文件 <a class="header-anchor" href="#_4-配置文件" aria-hidden="true">#</a></h4><p>配置文件位于 /etc/nginx/nginx.conf , 下列命令会引用/etc/nginx/conf.d目录下所有的.conf文件，这样可以保持主配置文件的简洁，同时配个多个.conf文件方便区分，增加可读性。</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">include </span><span style="color:#E1E4E8;">/etc/nginx/conf.d/*.conf;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>默认配置/etc/nginx/conf.d/default.conf</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> listen </span><span style="color:#E1E4E8;">      </span><span style="color:#79B8FF;">80</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">#监听端口</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> server_name </span><span style="color:#E1E4E8;"> localhost;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> root </span><span style="color:#E1E4E8;">  /usr/share/nginx/html; </span><span style="color:#6A737D;">#根目录</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> index </span><span style="color:#E1E4E8;"> index.html index.htm; </span><span style="color:#6A737D;">#首页</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> error_page </span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">502</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">503</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">504</span><span style="color:#E1E4E8;">  /50x.html;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">/50x.html </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> root </span><span style="color:#E1E4E8;">  /usr/share/nginx/html;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h4 id="_5-配置文件结构" tabindex="-1">5.配置文件结构 <a class="header-anchor" href="#_5-配置文件结构" aria-hidden="true">#</a></h4><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">http</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  server{</span><span style="color:#6A737D;">#虚拟主机</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#F97583;"> listen </span><span style="color:#E1E4E8;">80；</span></span>
<span class="line"><span style="color:#E1E4E8;">      server_name localhost;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  server{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>参考文档：</p><p><a href="https://nginx.org/en/linux_packages.html" target="_blank" rel="noreferrer">https://nginx.org/en/linux_packages.html</a></p><p><a href="https://nginx.org/en/docs/beginners_guide.html#control" target="_blank" rel="noreferrer">https://nginx.org/en/docs/beginners_guide.html#control</a></p><h1 id="_2-静态网页" tabindex="-1"><strong>2.静态网页</strong> <a class="header-anchor" href="#_2-静态网页" aria-hidden="true">#</a></h1><h4 id="静态网页配置" tabindex="-1">静态网页配置 <a class="header-anchor" href="#静态网页配置" aria-hidden="true">#</a></h4><p>配置一个静态的AdminLTE后台管理系统。</p><p>AdminLTE官方网址：<a href="https://adminlte.io/" target="_blank" rel="noreferrer">https://adminlte.io/</a></p><p>源码下载：<a href="https://codeload.github.com/ColorlibHQ/AdminLTE/tar.gz/refs/tags/v3.2.0" target="_blank" rel="noreferrer">https://codeload.github.com/ColorlibHQ/AdminLTE/tar.gz/refs/tags/v3.2.0</a></p><p>配置文件示例：</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">server{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> listen </span><span style="color:#E1E4E8;">8000;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> server_name </span><span style="color:#E1E4E8;">localhost;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> root </span><span style="color:#E1E4E8;">/home/AdminLTE-3.2.0;</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> index </span><span style="color:#E1E4E8;">index.html index2.html index3.html;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>虚拟主机server通过listen和server_name进行区分，如果有多个server配置，listen + server_name 不能重复。</p><h4 id="listen" tabindex="-1">listen <a class="header-anchor" href="#listen" aria-hidden="true">#</a></h4><p>监听可以配置成<code>IP</code>或<code>端口</code>或<code>IP+端口</code></p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#e1e4e8;">listen 127.0.0.1:8000; </span></span>
<span class="line"><span style="color:#e1e4e8;">listen 127.0.0.1;（ 端口不写,默认80 ） </span></span>
<span class="line"><span style="color:#e1e4e8;">listen 8000; </span></span>
<span class="line"><span style="color:#e1e4e8;">listen *:8000; </span></span>
<span class="line"><span style="color:#e1e4e8;">listen localhost:8000;</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="server-name" tabindex="-1">server_name <a class="header-anchor" href="#server-name" aria-hidden="true">#</a></h4><p>server_name主要用于区分，可以随便起。</p><p>也可以使用变量<code>$hostname</code>配置成主机名。</p><p>或者配置成域名：<code>example.org</code> <code>www.example.org</code> <code>*.example.org</code></p><p>如果多个server的端口重复，那么根据<code>域名</code>或者<code>主机名</code>去匹配 server_name 进行选择。</p><p>下面的例子中：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#e1e4e8;">curl http://localhost:80\`会访问\`/usr/share/nginx/html</span></span>
<span class="line"><span style="color:#e1e4e8;">curl http://nginx-dev:80\`会访问\`/home/AdminLTE-3.2.0</span></span>
<span class="line"><span style="color:#e1e4e8;"># curl http://localhost:80 会访问这个</span></span>
<span class="line"><span style="color:#e1e4e8;">server {</span></span>
<span class="line"><span style="color:#e1e4e8;">    listen       80;</span></span>
<span class="line"><span style="color:#e1e4e8;">    server_name  localhost;</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">    #access_log  /var/log/nginx/host.access.log  main;</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">    location / {</span></span>
<span class="line"><span style="color:#e1e4e8;">        root   /usr/share/nginx/html;</span></span>
<span class="line"><span style="color:#e1e4e8;">        index  index.html index.htm;</span></span>
<span class="line"><span style="color:#e1e4e8;">    }</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"> # curl http://nginx-dev:80 会访问这个</span></span>
<span class="line"><span style="color:#e1e4e8;">server{</span></span>
<span class="line"><span style="color:#e1e4e8;">    listen 80;</span></span>
<span class="line"><span style="color:#e1e4e8;">    server_name nginx-dev;#主机名</span></span>
<span class="line"><span style="color:#e1e4e8;">    </span></span>
<span class="line"><span style="color:#e1e4e8;">    location / {</span></span>
<span class="line"><span style="color:#e1e4e8;">        root /home/AdminLTE-3.2.0;</span></span>
<span class="line"><span style="color:#e1e4e8;">        index index.html index2.html index3.html;</span></span>
<span class="line"><span style="color:#e1e4e8;">    }</span></span>
<span class="line"><span style="color:#e1e4e8;">  </span></span>
<span class="line"><span style="color:#e1e4e8;">}</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h4 id="location" tabindex="-1">location <a class="header-anchor" href="#location" aria-hidden="true">#</a></h4><p><code>/</code>请求指向 root 目录</p><p>location 总是从<code>/</code>目录开始匹配，如果有子目录，例如<code>/css</code>，他会指向<code>/static/css</code></p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/css </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;"> root </span><span style="color:#E1E4E8;">/static;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>参考文档：</p><p><a href="https://nginx.org/en/docs/beginners_guide.html" target="_blank" rel="noreferrer">https://nginx.org/en/docs/beginners_guide.html</a></p><p><a href="https://nginx.org/en/docs/http/ngx_http_core_module.html#listen" target="_blank" rel="noreferrer">https://nginx.org/en/docs/http/ngx_http_core_module.html#listen</a></p><p><a href="https://nginx.org/en/docs/http/server_names.html" target="_blank" rel="noreferrer">https://nginx.org/en/docs/http/server_names.html</a></p><h1 id="_3-http反向代理" tabindex="-1"><strong>3.HTTP反向代理</strong> <a class="header-anchor" href="#_3-http反向代理" aria-hidden="true">#</a></h1><h4 id="_1-正向代理与反向代理" tabindex="-1">1.正向代理与反向代理 <a class="header-anchor" href="#_1-正向代理与反向代理" aria-hidden="true">#</a></h4><ul><li><strong>正向代理</strong></li></ul><p>在<strong>客户端</strong>代理转发请求称为<strong>正向代理</strong>。例如VPN。</p><p><img src="https://raw.githubusercontent.com/DunXi/images/main/img/1659069721078-51b03bd0-f4ae-4441-a8b1-deef20ce8e05.svg" alt="img"></p><ul><li><strong>反向代理</strong></li></ul><p>在<strong>服务器端</strong>代理转发请求称为<strong>反向代理</strong>。例如nginx</p><p><img src="https://raw.githubusercontent.com/DunXi/images/main/img/1659069737327-ed7e214e-aace-45b1-afe3-32a776b94b8f.svg" alt="img"></p><h4 id="_2-配置代理服务" tabindex="-1">2.配置代理服务 <a class="header-anchor" href="#_2-配置代理服务" aria-hidden="true">#</a></h4><p><img src="https://raw.githubusercontent.com/DunXi/images/main/img/1659084328663-32955bb1-82f0-40f3-b94a-f233b4a5793f.png" alt="img"></p><p>RuoYi是一个基于Spring Boot的后台管理系统，ruoyi-admin.jar可以从网盘中获取</p><p>网盘链接: <a href="https://pan.baidu.com/s/1NmCR-vdAcZLouRRn9V1yTA" target="_blank" rel="noreferrer">https://pan.baidu.com/s/1NmCR-vdAcZLouRRn9V1yTA</a> 密码: 1b60</p><p>也可以根据官网文档（<a href="http://doc.ruoyi.vip/ruoyi/%EF%BC%89%EF%BC%8C%E8%87%AA%E5%B7%B1%E7%BC%96%E8%AF%91%E6%89%93%E5%8C%85%E3%80%82" target="_blank" rel="noreferrer">http://doc.ruoyi.vip/ruoyi/），自己编译打包。</a></p><p>源码下载：<a href="https://codeload.github.com/yangzongzhuan/RuoYi/zip/refs/tags/v4.7.4" target="_blank" rel="noreferrer">https://codeload.github.com/yangzongzhuan/RuoYi/zip/refs/tags/v4.7.4</a></p><p>启动ruoyi后台服务，端口为8088；</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#B392F0;">java</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-jar</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ruoyi-admin.jar</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>nginx配置文件：</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;"> listen </span><span style="color:#E1E4E8;">8001;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;"> server_name </span><span style="color:#E1E4E8;">ruoyi.localhost;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> proxy_pass </span><span style="color:#E1E4E8;">http://localhost:8088;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><strong>proxy_pass配置说明：</strong></p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/some/path/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> proxy_pass </span><span style="color:#E1E4E8;">http://localhost:8080;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>如果<code>proxy-pass</code>的地址只配置到端口，不包含<code>/</code>或其他路径，那么location将被追加到转发地址中</li></ul><p>如上所示，访问 <code>http://localhost/some/path/page.html</code> 将被代理到 <code>http://localhost:8080/some/path/page.html</code></p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/some/path/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> proxy_pass </span><span style="color:#E1E4E8;">http://localhost:8080/zh-cn/;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>如果<code>proxy-pass</code>的地址包括<code>/</code>或其他路径，那么/some/path将会被替换，如上所示，访问 <code>http://localhost/some/path/page.html</code> 将被代理到 <code>http://localhost:8080/zh-cn/page.html</code>。‎</li></ul><h4 id="_3-设置代理请求headers" tabindex="-1">3.设置代理请求headers <a class="header-anchor" href="#_3-设置代理请求headers" aria-hidden="true">#</a></h4><p>‎用户可以重新定义或追加header信息传递给后端<a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_request_headers" target="_blank" rel="noreferrer">‎</a>‎服务器。可以包含文本、变量及其组合。默认情况下，仅重定义两个字段：‎</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">proxy_set_header </span><span style="color:#E1E4E8;">Host       $proxy_host;</span></span>
<span class="line"><span style="color:#F97583;">proxy_set_header </span><span style="color:#E1E4E8;">Connection close;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>由于使用反向代理之后，后端服务无法获取用户的真实IP，所以，一般反向代理都会设置以下header信息。</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/some/path/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">#nginx的主机地址</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> proxy_set_header </span><span style="color:#E1E4E8;">Host $http_host;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">#用户端真实的IP，即客户端IP</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> proxy_set_header </span><span style="color:#E1E4E8;">X-Real-IP $remote_addr;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> proxy_set_header </span><span style="color:#E1E4E8;">X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> proxy_pass </span><span style="color:#E1E4E8;">http://localhost:8088;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>常用变量的值：</p><p><code>$host</code>：nginx主机IP，例如192.168.56.105</p><p><code>$http_host</code>：nginx主机IP和端口，192.168.56.105:8001</p><p><code>$proxy_host</code>：localhost:8088，proxy_pass里配置的主机名和端口</p><p><code>$remote_addr</code>:用户的真实IP，即客户端IP。</p><h4 id="_4-非http代理" tabindex="-1">4.非HTTP代理 <a class="header-anchor" href="#_4-非http代理" aria-hidden="true">#</a></h4><p>如果要将请求传递到非 HTTP 代理服务器，可以使用下列指令：</p><ul><li><a href="https://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_pass" target="_blank" rel="noreferrer">fastcgi_pass</a> 将请求转发到FastCGI服务器（多用于PHP）</li><li><a href="https://nginx.org/en/docs/http/ngx_http_scgi_module.html#scgi_pass" target="_blank" rel="noreferrer">scgi_pass</a> 将请求转发到SCGI server服务器（多用于PHP）</li><li><a href="https://nginx.org/en/docs/http/ngx_http_uwsgi_module.html#uwsgi_pass" target="_blank" rel="noreferrer">uwsgi_pass</a> 将请求转发到uwsgi服务器（多用于python）</li><li><a href="https://nginx.org/en/docs/http/ngx_http_memcached_module.html#memcached_pass" target="_blank" rel="noreferrer">memcached_pass</a> 将请求转发到memcached服务器</li></ul><p>参考文档：</p><p><a href="https://nginx.org/en/docs/beginners_guide.html" target="_blank" rel="noreferrer">https://nginx.org/en/docs/beginners_guide.html</a></p><p><a href="https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/" target="_blank" rel="noreferrer">https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/</a></p><p><a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header" target="_blank" rel="noreferrer">http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_set_header</a></p><h1 id="_4-动静分离" tabindex="-1">4.<strong>动静分离</strong> <a class="header-anchor" href="#_4-动静分离" aria-hidden="true">#</a></h1><h4 id="动静分离的好处" tabindex="-1">动静分离的好处 <a class="header-anchor" href="#动静分离的好处" aria-hidden="true">#</a></h4><p>Apache Tocmat 严格来说是一款java EE服务器，主要是用来处理 servlet请求。处理css、js、图片这些静态文件的IO性能不够好，因此，将静态文件交给nginx处理，可以提高系统的访问速度，减少tomcat的请求次数，有效的给后端服务器降压。</p><h4 id="分离静态文件" tabindex="-1">分离静态文件 <a class="header-anchor" href="#分离静态文件" aria-hidden="true">#</a></h4><p><img src="https://raw.githubusercontent.com/DunXi/images/main/img/1659339381949-41af5d82-eb67-4db3-aaa3-524a61e3a52f.png" alt="img"></p><p>RuoYi是一个基于Spring Boot的后台管理系统，ruoyi-admin.war可以从网盘中获取</p><p>网盘链接: <a href="https://pan.baidu.com/s/1NmCR-vdAcZLouRRn9V1yTA" target="_blank" rel="noreferrer">https://pan.baidu.com/s/1NmCR-vdAcZLouRRn9V1yTA</a> 密码: 1b60</p><p>也可以根据官网文档（<a href="http://doc.ruoyi.vip/ruoyi/%EF%BC%89%EF%BC%8C%E8%87%AA%E5%B7%B1%E7%BC%96%E8%AF%91%E6%89%93%E5%8C%85%E3%80%82" target="_blank" rel="noreferrer">http://doc.ruoyi.vip/ruoyi/），自己编译打包。</a></p><p>源码下载：<a href="https://codeload.github.com/yangzongzhuan/RuoYi/zip/refs/tags/v4.7.4" target="_blank" rel="noreferrer">https://codeload.github.com/yangzongzhuan/RuoYi/zip/refs/tags/v4.7.4</a></p><p>部署ruoyi-admin.war</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#B392F0;">mv</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/home/apps/ruoyi-admin.war</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/home/apache-tomcat-8.5.81/webapps/ROOT.war</span></span>
<span class="line"><span style="color:#B392F0;">rm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-rf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/home/apache-tomcat-8.5.81/webapps/ROOT</span></span>
<span class="line"><span style="color:#B392F0;">/home/apache-tomcat-8.5.81/bin/startup.sh</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>部署完成后，对项目目录稍作调整</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/home/apache-tomcat-8.5.81/webapps/ROOT</span></span>
<span class="line"><span style="color:#B392F0;">mv</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">WEB-INF/classes/static/i18n</span><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">WEB-INF/classes/templates/i18n</span><span style="color:#E1E4E8;"> </span></span>
<span class="line"><span style="color:#B392F0;">mv</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">WEB-INF/classes/static</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/home/www/</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>修改application.yml</p><div class="language-yaml line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#85E89D;">messages</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 国际化资源文件路径 </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 将 static/i18n/messages 修改为 templates/i18n/messages</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#85E89D;">basename</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">templates/i18n/messages</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>静态文件目录说明：</p><p>除了js、css、图片文件之外，还有字体文件和一个ie提示页面。</p><p><img src="https://raw.githubusercontent.com/DunXi/images/main/img/1659403384054-77a861b5-99f9-45a6-81e1-f657aac53b40.png" alt="img"></p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">server{</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> proxy_pass </span><span style="color:#E1E4E8;">http://localhost:8080/;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">/html/ie.html </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> root </span><span style="color:#E1E4E8;"> /home/www/static;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">^~</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">/fonts/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> root </span><span style="color:#E1E4E8;"> /home/www/static;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">\\.(css|js|png|jpg|gif|ico) </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> root </span><span style="color:#E1E4E8;">/home/www/static;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h4 id="location-修饰符" tabindex="-1">location 修饰符 <a class="header-anchor" href="#location-修饰符" aria-hidden="true">#</a></h4><ul><li>location可以使用修饰符或正则表达式</li></ul><p>修饰符：</p><p>= 等于，严格匹配 ，匹配优先级最高。</p><p>^~ 表示普通字符匹配。使用前缀匹配。如果匹配成功，则不再匹配其它 location。优先级第二高。</p><p>~ 区分大小写</p><p>~* 不区分大小写</p><ul><li>优先级</li></ul><p>优先级从高到低依次为：。</p><ol><li>精确匹配（=）</li><li>前缀匹配（^~）</li><li>正则匹配（~和～*）</li><li>不写</li></ol><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">^~</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">/images/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> proxy_pass </span><span style="color:#E1E4E8;">http://localhost:8080;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">\\.jpg </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> proxy_pass </span><span style="color:#E1E4E8;">http://localhost:8080;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>如上所示：</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#e1e4e8;">/images/1.jpg\`代理到 \`http://localhost:8080/images/1.jpg</span></span>
<span class="line"><span style="color:#e1e4e8;">/some/path/1.jpg\` 代理到\`http://localhost:8080/some/path/1.jpg</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>参考文档：</p><p><a href="https://nginx.org/en/docs/beginners_guide.html" target="_blank" rel="noreferrer">https://nginx.org/en/docs/beginners_guide.html</a></p><p><a href="https://nginx.org/en/docs/http/ngx_http_core_module.html#location" target="_blank" rel="noreferrer">https://nginx.org/en/docs/http/ngx_http_core_module.html#location</a></p><p><a href="https://docs.nginx.com/nginx/admin-guide/web-server/serving-static-content/" target="_blank" rel="noreferrer">https://docs.nginx.com/nginx/admin-guide/web-server/serving-static-content/</a></p><h1 id="_5-缓冲-buffer-和缓存-cache" tabindex="-1"><strong>5.缓冲(buffer)和缓存(cache)</strong> <a class="header-anchor" href="#_5-缓冲-buffer-和缓存-cache" aria-hidden="true">#</a></h1><h3 id="缓冲-buffer" tabindex="-1">缓冲（buffer） <a class="header-anchor" href="#缓冲-buffer" aria-hidden="true">#</a></h3><p>缓冲一般放在内存中，如果不适合放入内存（比如超过了指定大小），则会将响应写入磁盘临时文件中。</p><p>启用缓冲后，nginx先将后端的请求响应（response）放入缓冲区中，等到整个响应完成后，再发给客户端。</p><p><img src="https://raw.githubusercontent.com/DunXi/images/main/img/1659585056819-df82befd-d847-4a0b-bffc-84cf626c2fed.png" alt="img"></p><p>客户端往往是用户网络，情况复杂，可能出现网络不稳定，速度较慢的情况。</p><p>而nginx到后端server一般处于同一个机房或者区域，网速稳定且速度极快。</p><p><img src="https://raw.githubusercontent.com/DunXi/images/main/img/1659585159748-308fa557-418b-4bda-9f3f-a16efccaa673.png" alt="img"></p><p>如果禁用了缓冲，则在客户端从代理服务器接收响应时，响应将同步发送到客户端。对于需要尽快开始接收响应的快速交互式客户端，此行为可能是可取的。</p><p>这就会带来一个问题：因为客户端到nginx的网速过慢，导致nginx只能以一个较慢的速度将响应传给客户端；进而导致后端server也只能以同样较慢的速度传递响应给nginx，造成一次请求连接耗时过长。</p><p>在高并发的情况下，后端server可能会出现大量的连接积压，最终拖垮server端。</p><p><img src="https://raw.githubusercontent.com/DunXi/images/main/img/1659585458893-c276995d-f299-444b-bd33-cee5933ab878.png" alt="img"></p><p>开启代理缓冲后，nginx可以用较快的速度尽可能将响应体读取并缓冲到本地内存或磁盘中，然后同时根据客户端的网络质量以合适的网速将响应传递给客户端。</p><p>这样既解决了server端连接过多的问题，也保证了能持续稳定的像客户端传递响应。</p><p>使用<a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering" target="_blank" rel="noreferrer">proxy_buffering</a>启用和禁用缓冲，nginx默认为 on 启用缓冲，若要关闭，设置为 off 。</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">proxy_buffering </span><span style="color:#E1E4E8;">off;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffers" target="_blank" rel="noreferrer">proxy_buffers</a> 指令设置每个连接读取响应的缓冲区的<code>大小</code>和<code>数量</code> 。默认情况下，缓冲区大小等于一个内存页，4K 或 8K，具体取决于操作系统。</p><p>来自后端服务器响应的第一部分存储在单独的缓冲区中，其大小通过 <a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size" target="_blank" rel="noreferrer">proxy_buffer_size</a> 指令进行设置，此部分通常是相对较小的响应headers，通常将其设置成小于默认值。</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> proxy_buffers </span><span style="color:#E1E4E8;">16 </span><span style="color:#79B8FF;">4k</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> proxy_buffer_size </span><span style="color:#E1E4E8;">2k;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> proxy_pass </span><span style="color:#E1E4E8;">http://localhost:8088;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>如果整个响应不适合存到内存里，则将其中的一部分保存到磁盘上的‎‎临时文件中‎‎。</p><p>‎<a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_max_temp_file_size" target="_blank" rel="noreferrer">‎proxy_max_temp_file_size‎</a>‎设置临时文件的最大值。</p><p>‎<a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_temp_file_write_size" target="_blank" rel="noreferrer">‎proxy_temp_file_write_size‎</a>‎设置一次写入临时文件的大小。</p><h3 id="缓存-cache" tabindex="-1">缓存（cache） <a class="header-anchor" href="#缓存-cache" aria-hidden="true">#</a></h3><p>启用缓存后，nginx将响应保存在磁盘中，返回给客户端的数据首先从缓存中获取，这样子相同的请求不用每次都发送给后端服务器，减少到后端请求的数量。</p><p><img src="https://raw.githubusercontent.com/DunXi/images/main/img/1659599505974-889b4227-80eb-4deb-8bae-303828cc3bc4.png" alt="img"></p><p>启用缓存，需要在http上下文中使用 <a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_path" target="_blank" rel="noreferrer">proxy_cache_path</a> 指令，定义缓存的本地文件目录，名称和大小。</p><p>缓存区可以被多个server共享，使用<a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache" target="_blank" rel="noreferrer">proxy_cache</a> 指定使用哪个缓存区。</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">http</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> proxy_cache_path </span><span style="color:#E1E4E8;">/data/nginx/cache keys_zone=mycache:10m;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_cache </span><span style="color:#E1E4E8;">mycache;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#F97583;"> proxy_pass </span><span style="color:#E1E4E8;">http://localhost:8000;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>缓存目录的文件名是 <a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key" target="_blank" rel="noreferrer">proxy_cache_key</a> 的MD5值。</p><p>例如：<code>/data/nginx/cache/**c**/**29**/b7f54b2df7773722d382f4809d650**29c**</code></p><p><a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key" target="_blank" rel="noreferrer">proxy_cache_key</a> 默认设置如下：</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">proxy_cache_key </span><span style="color:#E1E4E8;">$scheme$proxy_host$uri$is_args$args;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>也可以自定义缓存的键，例如</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">proxy_cache_key </span><span style="color:#9ECBFF;">&quot;$</span><span style="color:#E1E4E8;">host</span><span style="color:#9ECBFF;">$</span><span style="color:#E1E4E8;">request_uri</span><span style="color:#9ECBFF;">$</span><span style="color:#E1E4E8;">cookie_user</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>缓存不应该设置的太敏感，可以使用<a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_min_uses" target="_blank" rel="noreferrer">proxy_cache_min_uses</a>设置相同的key的请求，访问次数超过指定数量才会被缓存。</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">proxy_cache_min_uses </span><span style="color:#E1E4E8;">5;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>默认情况下，响应无限期地保留在缓存中。仅当缓存超过最大配置大小时，按照时间删除最旧的数据。</p><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-hidden="true">#</a></h3><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">proxy_cache_path </span><span style="color:#E1E4E8;">/var/cache/nginx/data keys_zone=mycache:10m;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> listen </span><span style="color:#E1E4E8;">8001;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> server_name </span><span style="color:#E1E4E8;">ruoyi.localhost;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">#设置buffer</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_buffers </span><span style="color:#E1E4E8;">16 </span><span style="color:#79B8FF;">4k</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_buffer_size </span><span style="color:#E1E4E8;">2k;</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_pass </span><span style="color:#E1E4E8;">http://localhost:8088;        </span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">\\.(js|css|png|jpg|gif|ico) </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">#设置cache</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_cache </span><span style="color:#E1E4E8;">mycache;</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_cache_valid </span><span style="color:#E1E4E8;">200 </span><span style="color:#79B8FF;">302</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10m</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_cache_valid </span><span style="color:#E1E4E8;">404      </span><span style="color:#79B8FF;">1m</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_cache_valid </span><span style="color:#E1E4E8;">any </span><span style="color:#79B8FF;">5m</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_pass </span><span style="color:#E1E4E8;">http://localhost:8088;  </span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">/html/ie.html </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_cache </span><span style="color:#E1E4E8;">mycache;</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_cache_valid </span><span style="color:#E1E4E8;">200 </span><span style="color:#79B8FF;">302</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10m</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_cache_valid </span><span style="color:#E1E4E8;">404      </span><span style="color:#79B8FF;">1m</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_cache_valid </span><span style="color:#E1E4E8;">any </span><span style="color:#79B8FF;">5m</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_pass </span><span style="color:#E1E4E8;">http://localhost:8088;  </span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">^~</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">/fonts/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_cache </span><span style="color:#E1E4E8;">mycache;</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_cache_valid </span><span style="color:#E1E4E8;">200 </span><span style="color:#79B8FF;">302</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10m</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_cache_valid </span><span style="color:#E1E4E8;">404      </span><span style="color:#79B8FF;">1m</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_cache_valid </span><span style="color:#E1E4E8;">any </span><span style="color:#79B8FF;">5m</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_pass </span><span style="color:#E1E4E8;">http://localhost:8088;  </span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><p>参考文档：</p><p><a href="https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/" target="_blank" rel="noreferrer">https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/</a></p><p><a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size" target="_blank" rel="noreferrer">https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffer_size</a></p><p><a href="https://docs.nginx.com/nginx/admin-guide/content-cache/content-caching/" target="_blank" rel="noreferrer">https://docs.nginx.com/nginx/admin-guide/content-cache/content-caching/</a></p><p><a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_path" target="_blank" rel="noreferrer">http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_path</a></p><h1 id="_6-负载均衡" tabindex="-1"><strong>6.负载均衡</strong> <a class="header-anchor" href="#_6-负载均衡" aria-hidden="true">#</a></h1><p>跨多个应用程序实例的负载平衡是一种常用技术，用于优化资源利用率、最大化吞吐量、减少延迟和确保容错配置。‎使用nginx作为非常有效的HTTP负载平衡器，将流量分配到多个应用程序服务器，可以提升Web应用程序的性能，提高扩展性和可靠性。</p><h3 id="配置服务组" tabindex="-1">配置服务组 <a class="header-anchor" href="#配置服务组" aria-hidden="true">#</a></h3><p><img src="https://raw.githubusercontent.com/DunXi/images/main/img/1659424182326-cbf92b95-7038-436a-bf74-d086ef1db637.png" alt="img"></p><p>使用 <code>upstream</code>定义一组服务 。</p><p>注意：upstream 位于 http上下文中，与server 并列，不要放在server中。</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">upstream</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ruoyi-apps </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">#不写，采用轮循机制</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> localhost:8080;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> localhost:8088;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;"> listen </span><span style="color:#E1E4E8;">8003;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;"> server_name </span><span style="color:#E1E4E8;">ruoyi.loadbalance;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> proxy_pass </span><span style="color:#E1E4E8;">http://ruoyi-apps;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="负载均衡策略" tabindex="-1">负载均衡策略 <a class="header-anchor" href="#负载均衡策略" aria-hidden="true">#</a></h3><h4 id="_1-轮循机制-round-robin" tabindex="-1">1.轮循机制（round-robin） <a class="header-anchor" href="#_1-轮循机制-round-robin" aria-hidden="true">#</a></h4><p>默认机制，以轮循机制方式分发。</p><h4 id="_2-最小连接-least-connected" tabindex="-1">2.<a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#least_conn" target="_blank" rel="noreferrer">最小连接</a>（least-connected ） <a class="header-anchor" href="#_2-最小连接-least-connected" aria-hidden="true">#</a></h4><p>将下一个请求分配给活动连接数最少的服务器（较为空闲的服务器）。‎</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">upstream</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">backend </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">least_conn</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> backend1.example.com;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> backend2.example.com;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>请注意，使用轮循机制或最少连接的负载平衡，每个客户端的请求都可能分发到不同的服务器。不能保证同一客户端将始终定向到同一服务器。‎</p><h4 id="_3-ip-hash" tabindex="-1">3.<a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#ip_hash" target="_blank" rel="noreferrer">ip-hash</a> <a class="header-anchor" href="#_3-ip-hash" aria-hidden="true">#</a></h4><p>客户端的 IP 地址将用作哈希键，来自同一个ip的请求会被转发到相同的服务器。</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">upstream</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">backend </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">ip_hash</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> backend1.example.com;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> backend2.example.com;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>此方法可确保来自同一客户端的请求将始终定向到同一服务器，除非此服务器不可用。‎</p><h4 id="‎4-hash" tabindex="-1"><a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#hash" target="_blank" rel="noreferrer">‎4.hash</a> <a class="header-anchor" href="#‎4-hash" aria-hidden="true">#</a></h4><p>通用hash，允许用户自定义hash的key，key可以是字符串、变量或组合。</p><p>例如，key可以是配对的源 IP 地址和端口，也可以是 URI，如以下示例所示：‎</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">upstream</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">backend </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> hash </span><span style="color:#E1E4E8;">$request_uri consistent;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> backend1.example.com;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> backend2.example.com;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>请注意：基于 IP 的哈希算法存在一个问题，那就是当有一个上游服务器宕机或者扩容的时候，会引发大量的路由变更，进而引发连锁反应，导致大量缓存失效等问题。</p><p><code>consistent</code>参数启用 ‎<a href="http://www.last.fm/user/RJ/journal/2007/04/10/rz_libketama_-_a_consistent_hashing_algo_for_memcache_clients" target="_blank" rel="noreferrer">‎ketama‎</a>‎ 一致哈希算法，如果在上游组中添加或删除服务器，只会重新映射部分键，从而最大限度地减少缓存失效。‎</p><p>假设我们基于 key 来做 hash，现在有 4 台上游服务器，如果 hash 算法对 key 取模，请求根据用户定义的哈希键值均匀分布在所有上游服务器之间。。</p><p><img src="https://raw.githubusercontent.com/DunXi/images/main/img/1659518154051-3160e796-eeb0-47e9-9dff-204359a5c06b.png" alt="img">当有一台服务器宕机的时候，就需要重新对 key 进行 hash，最后会发现所有的对应关系全都失效了，从而会引发缓存大范围失效。</p><p><img src="https://raw.githubusercontent.com/DunXi/images/main/img/1659518106125-461a8771-50aa-4033-864c-43bc91f516d6.png" alt="img"></p><p><img src="https://raw.githubusercontent.com/DunXi/images/main/img/1659518178713-4ea13d8a-6993-41ba-aa7d-29421fb7c650.png" alt="img"></p><h4 id="_5-‎随机‎‎-random" tabindex="-1">5.<a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#random" target="_blank" rel="noreferrer">‎随机‎</a>‎ (random） <a class="header-anchor" href="#_5-‎随机‎‎-random" aria-hidden="true">#</a></h4><p>每个请求都将传递到随机选择的服务器。</p><p>two是可选参数，NGINX 在考虑服务器权重的情况下随机选择两台服务器，然后使用指定的方法选择其中一台，默认为选择连接数最少（least_conn‎）的服务器。</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">upstream</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">backend </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> random </span><span style="color:#E1E4E8;">two least_conn;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> backend1.example.com;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> backend2.example.com;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> backend3.example.com;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> backend4.example.com;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="_6-权重-weight" tabindex="-1">6.权重（weight） <a class="header-anchor" href="#_6-权重-weight" aria-hidden="true">#</a></h4><p><img src="https://raw.githubusercontent.com/DunXi/images/main/img/1659425649735-e2fdb0a4-5aaa-4a0e-81b3-44a8f7682c9c.png" alt="img"></p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">upstream</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">my-server </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> performance.server </span><span style="color:#FFAB70;">weight</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    server app1.server;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> app2.server;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>‎如上所示，每 5 个新请求将按如下方式分布在应用程序实例中：3 个请求将定向到performance.server，一个请求将转到app1.server，另一个请求将转到app2.server。‎</p><h4 id="_7-健康检查" tabindex="-1">7.健康检查 <a class="header-anchor" href="#_7-健康检查" aria-hidden="true">#</a></h4><p>在反向代理中，如果后端服务器在某个周期内响应失败次数超过规定值，nginx会将此服务器标记为失败，并在之后的一个周期不再将请求发送给这台服务器。‎</p><p>通过<a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#fail_timeout" target="_blank" rel="noreferrer">fail_timeout‎</a>‎ 来设置检查周期，默认为10秒。</p><p>通过<a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#max_fails" target="_blank" rel="noreferrer">max_fails‎</a>来设置检查失败次数，默认为1次。‎</p><p>‎在以下示例中，如果NGINX无法向服务器发送请求或在30秒内请求失败次数超过3次，则会将服务器标记为不可用30秒。</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">upstream</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">backend </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> backend1.example.com;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> backend2.example.com </span><span style="color:#FFAB70;">max_fails</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> fail_timeout=30s; </span></span>
<span class="line"><span style="color:#E1E4E8;">} </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>参考文档：</p><p><a href="https://nginx.org/en/docs/http/load_balancing.html" target="_blank" rel="noreferrer">https://nginx.org/en/docs/http/load_balancing.html</a></p><p><a href="https://docs.nginx.com/nginx/admin-guide/load-balancer/http-load-balancer/" target="_blank" rel="noreferrer">https://docs.nginx.com/nginx/admin-guide/load-balancer/http-load-balancer/</a></p><h1 id="_7-https配置" tabindex="-1"><strong>7.HTTPS配置</strong> <a class="header-anchor" href="#_7-https配置" aria-hidden="true">#</a></h1><p>HTTPS 协议是<strong>由HTTP 加上TLS/SSL 协议构建的可进行加密传输、身份认证的网络协议</strong>，主要通过数字证书、加密算法、非对称密钥等技术完成互联网数据传输加密，实现互联网传输安全保护。</p><h3 id="生成证书" tabindex="-1">生成证书 <a class="header-anchor" href="#生成证书" aria-hidden="true">#</a></h3><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">openssl</span><span style="color:#E1E4E8;"> genrsa -des3 -out server.key 2048</span></span>
<span class="line"><span style="color:#F97583;">openssl</span><span style="color:#E1E4E8;"> req -new -key server.key -out server.csr</span></span>
<span class="line"><span style="color:#F97583;">openssl</span><span style="color:#E1E4E8;"> x509 -req -days </span><span style="color:#79B8FF;">365</span><span style="color:#E1E4E8;"> -in server.csr -signkey server.key -out server.crt</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="配置ssl" tabindex="-1">配置ssl <a class="header-anchor" href="#配置ssl" aria-hidden="true">#</a></h3><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> listen </span><span style="color:#E1E4E8;">             </span><span style="color:#79B8FF;">443</span><span style="color:#E1E4E8;"> ssl;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> server_name </span><span style="color:#E1E4E8;">        ruoyi.https;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> ssl_certificate </span><span style="color:#E1E4E8;">    /home/ssl/server.crt;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> ssl_certificate_key </span><span style="color:#E1E4E8;">/home/ssl/server.key;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> ssl_protocols </span><span style="color:#E1E4E8;">      TLSv1 TLSv1.1 TLSv1.2;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> ssl_ciphers </span><span style="color:#E1E4E8;">        HIGH:!aNULL:!MD5;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_pass </span><span style="color:#E1E4E8;">http://localhost:8088;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>如果设置了密码，需要加上</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">server{</span></span>
<span class="line"><span style="color:#E1E4E8;">  ……</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;"> ssl_password_file </span><span style="color:#E1E4E8;">  /home/ssl/cert.pass;</span></span>
<span class="line"><span style="color:#E1E4E8;">  ……</span></span>
<span class="line"><span style="color:#E1E4E8;">} </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="https优化" tabindex="-1">https优化 <a class="header-anchor" href="#https优化" aria-hidden="true">#</a></h3><p>SSL 操作会消耗额外的 CPU 资源。CPU 占用最多的操作是 SSL 握手。有两种方法可以最大程度地减少每个客户端的这些操作数：</p><ul><li>使保持活动连接能够通过一个连接发送多个请求</li><li>重用 SSL 会话参数以避免并行连接和后续连接的 SSL 握手</li></ul><p>会话存储在工作进程之间共享并由 <a href="https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_session_cache" target="_blank" rel="noreferrer">ssl_session_cache</a> 指令配置的 SSL 会话缓存中。一兆字节的缓存包含大约 4000 个会话。默认缓存超时为 5 分钟。可以使用 <a href="https://nginx.org/en/docs/http/ngx_http_ssl_module.html#ssl_session_timeout" target="_blank" rel="noreferrer">ssl_session_timeout</a> 指令增加此超时。以下是针对具有 10 MB 共享会话缓存的多核系统优化的示例配置：</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">ssl_session_cache </span><span style="color:#E1E4E8;">  shared:SSL:10m;</span></span>
<span class="line"><span style="color:#F97583;">ssl_session_timeout </span><span style="color:#E1E4E8;">10m;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>参考文档：</p><p><a href="http://nginx.org/en/docs/http/configuring_https_servers.html" target="_blank" rel="noreferrer">http://nginx.org/en/docs/http/configuring_https_servers.html</a></p><p><a href="https://docs.nginx.com/nginx/admin-guide/security-controls/terminating-ssl-http/" target="_blank" rel="noreferrer">https://docs.nginx.com/nginx/admin-guide/security-controls/terminating-ssl-http/</a></p><h1 id="_8-tcp反向代理" tabindex="-1"><strong>8.TCP反向代理</strong> <a class="header-anchor" href="#_8-tcp反向代理" aria-hidden="true">#</a></h1><h3 id="_1-stream" tabindex="-1">1.stream <a class="header-anchor" href="#_1-stream" aria-hidden="true">#</a></h3><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#6A737D;">#HTTP代理</span></span>
<span class="line"><span style="color:#F97583;">http</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> listen </span><span style="color:#E1E4E8;">8002;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> proxy_pass </span><span style="color:#E1E4E8;">http://localhost:8080/;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#TCP代理</span></span>
<span class="line"><span style="color:#F97583;">stream</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> listen </span><span style="color:#E1E4E8;">13306;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> proxy_pass </span><span style="color:#E1E4E8;">localhost:3306;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="_2-tcp负载均衡" tabindex="-1">2.tcp负载均衡 <a class="header-anchor" href="#_2-tcp负载均衡" aria-hidden="true">#</a></h3><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">stream</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">upstream</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">backend-mysql </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> localhost:3306;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> localhost:3307;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> keepalive </span><span style="color:#E1E4E8;">8;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> listen </span><span style="color:#E1E4E8;">13306;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> proxy_pass </span><span style="color:#E1E4E8;">backend-mysql;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>使用<code>**keepalive**</code>定义连接池里空闲连接的数量。</p><p><code>**keepalive_timeout**</code> 默认60s。如果连接池里的连接空闲时间超过这个值，则连接关闭。</p><p>在最简单的 HTTP 实现中，客户端打开新连接，写入请求，读取响应，然后关闭连接以释放关联的资源。</p><p><img src="https://raw.githubusercontent.com/DunXi/images/main/img/1659513123084-afe08b7c-223b-4b8c-8f47-9e1ee09a2303.png" alt="img"></p><p>在客户端读取响应后，保持连接处于打开状态，因此可以将其重新用于后续请求。</p><p><img src="https://raw.githubusercontent.com/DunXi/images/main/img/1659513122399-c3e4f8c4-d154-4bc3-b073-6303c2ff67bd.png" alt="img"></p><p>使用 <a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive" target="_blank" rel="noreferrer">keepalive</a> 指令启用从 NGINX Plus 到上游服务器的保持活动连接，定义在每个工作进程的缓存中保留的与上游服务器的空闲保持活动连接的最大数量。当超过此数字时，将关闭最近最少使用的连接。如果没有 keepalives，您将增加更多的开销，并且连接和临时端口都效率低下。</p><p>现代 Web 浏览器通常会打开 6 到 8 个保持连接。</p><p>参考文档：</p><p><a href="https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive" target="_blank" rel="noreferrer">https://nginx.org/en/docs/http/ngx_http_upstream_module.html#keepalive</a></p><p><a href="https://docs.nginx.com/nginx/admin-guide/load-balancer/tcp-udp-load-balancer/" target="_blank" rel="noreferrer">https://docs.nginx.com/nginx/admin-guide/load-balancer/tcp-udp-load-balancer/</a></p><p><a href="https://www.nginx.com/blog/http-keepalives-and-web-performance/" target="_blank" rel="noreferrer">https://www.nginx.com/blog/http-keepalives-and-web-performance/</a></p><p><a href="https://www.nginx.com/blog/overcoming-ephemeral-port-exhaustion-nginx-plus/" target="_blank" rel="noreferrer">https://www.nginx.com/blog/overcoming-ephemeral-port-exhaustion-nginx-plus/</a></p><h1 id="_9-重写-return和rewrite-重写" tabindex="-1"><strong>9.重写(return和</strong>rewrite(重写)<strong>)</strong> <a class="header-anchor" href="#_9-重写-return和rewrite-重写" aria-hidden="true">#</a></h1><p>nginx有两个重写指令：<code>return</code>和<code>rewrite</code></p><h2 id="return" tabindex="-1">return <a class="header-anchor" href="#return" aria-hidden="true">#</a></h2><p>服务端停止处理并将状态码status code返回给客户端</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#e1e4e8;">return *code* *URL*</span></span>
<span class="line"><span style="color:#e1e4e8;">return *code* *text*</span></span>
<span class="line"><span style="color:#e1e4e8;">return *code*</span></span>
<span class="line"><span style="color:#e1e4e8;">return *URL*</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="强制所有请求使用https" tabindex="-1">强制所有请求使用Https <a class="header-anchor" href="#强制所有请求使用https" aria-hidden="true">#</a></h3><p>错误写法</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> listen </span><span style="color:#E1E4E8;">8003;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> server_name </span><span style="color:#E1E4E8;">ruoyi.loadbalance;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">301</span><span style="color:#E1E4E8;"> https://localhost:8004;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>正确写法</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> listen </span><span style="color:#E1E4E8;">8003;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> server_name </span><span style="color:#E1E4E8;">ruoyi.loadbalance;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">301</span><span style="color:#E1E4E8;"> https://192.168.56.105:8004;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="转发和重定向" tabindex="-1">转发和重定向 <a class="header-anchor" href="#转发和重定向" aria-hidden="true">#</a></h2><p>转发是服务端行为，重定向是客户端行为。</p><h4 id="转发" tabindex="-1">转发 <a class="header-anchor" href="#转发" aria-hidden="true">#</a></h4><p>发向代理proxy_pass属于转发，浏览器的访问栏输入的地址不会发生变化。</p><p><img src="https://raw.githubusercontent.com/DunXi/images/main/img/1660027681278-8d232df3-69f1-4bb7-ae31-70dab5777cb7.png" alt="img"></p><h4 id="重定向" tabindex="-1">重定向 <a class="header-anchor" href="#重定向" aria-hidden="true">#</a></h4><p>return，rewrite属于重定向，在客户端进行。浏览器的访问栏输入的地址会发生变化。</p><p><img src="https://raw.githubusercontent.com/DunXi/images/main/img/1660014580821-4eae68ec-ecf6-45ef-a5a7-4e33a77efec9.png" alt="img"></p><p>域名迁移，不让用户收藏的链接或者搜索引擎的链接失效</p><p>将请求从 <a href="http://www.old-name.com" target="_blank" rel="noreferrer">www.old-name.com</a> <strong><a href="http://old-name.com" target="_blank" rel="noreferrer">old-name.com</a></strong> 永久重定向到 <strong><a href="http://www.new-name.com" target="_blank" rel="noreferrer">www.new-name.com</a>，包含http和https请求</strong></p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> listen </span><span style="color:#E1E4E8;">80;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> listen </span><span style="color:#E1E4E8;">443 ssl;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> server_name </span><span style="color:#E1E4E8;">www.old-name.com old-name.com;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">301</span><span style="color:#E1E4E8;"> $scheme://www.new-name.com$request_uri;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>由于捕获了域名后面的 URL 部分，因此，如果新旧网站之间存在一对一的页面对应关系（例如，<strong><a href="http://www.new-name.com/about" target="_blank" rel="noreferrer">www.new-name.com/about</a></strong> 具有与 <strong><a href="http://www.old-name.com/about" target="_blank" rel="noreferrer">www.old-name.com/about</a></strong> 相同的基本内容），则此重写是合适的。如果除了更改域名之外还重新组织了网站，则通过省略以下内容，将所有请求重定向到主页可能会更安全</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> listen </span><span style="color:#E1E4E8;">80;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> listen </span><span style="color:#E1E4E8;">443 ssl;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> server_name </span><span style="color:#E1E4E8;">www.old-name.com old-name.com;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">301</span><span style="color:#E1E4E8;"> $scheme://www.new-name.com;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>添加www</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#6A737D;"># add &#39;www&#39;</span></span>
<span class="line"><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> listen </span><span style="color:#E1E4E8;">80;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> listen </span><span style="color:#E1E4E8;">443 ssl;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> server_name </span><span style="color:#E1E4E8;">domain.com;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">301</span><span style="color:#E1E4E8;"> $scheme://www.domain.com$request_uri;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h4 id="状态码" tabindex="-1">状态码 <a class="header-anchor" href="#状态码" aria-hidden="true">#</a></h4><ul><li><p>2xx 成功</p></li><li><p>3xx 表示重定向</p></li><li><ul><li>301 永久重定向</li><li>302 临时重定向</li></ul></li><li><p>4xx 请求地址出错</p></li><li><ul><li>403 拒绝请求</li><li>404 请求找不到</li></ul></li><li><p>5xx 服务器内部错误</p></li></ul><h2 id="rewrite" tabindex="-1">rewrite <a class="header-anchor" href="#rewrite" aria-hidden="true">#</a></h2><p>‎如果指定的正则表达式与请求 URI 匹配，则 URI 将按照字符串中的指定进行更改。指令按其在配置文件中出现的先后顺序执行。</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># ...</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">rewrite</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">^(/download/.*)/media/(\\w+)\\.?.*$</span><span style="color:#E1E4E8;"> $1/mp3/$2.mp3</span><span style="color:#79B8FF;"> last</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">rewrite</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">^(/download/.*)/audio/(\\w+)\\.?.*$</span><span style="color:#E1E4E8;"> $1/mp3/$2.ra </span><span style="color:#79B8FF;"> last</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">403</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># ...</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>上面是使用该指令的示例 NGINX 重写规则。它匹配以字符串 <strong>/download</strong> 开头的 URL，然后在路径后面的某个位置包含 <strong>/media</strong>/ 或 <strong>/audio/</strong> 目录。它将这些元素替换为 <strong>/mp3/，<strong>并添加相应的文件扩展名</strong>，.mp3</strong> 或 <strong>.ra</strong>。和 变量捕获未更改的路径元素。例如，<strong>/download/cdn-west/media/file1</strong> 变成了 <strong>/download/cdn-west/mp3/file1.mp3</strong>。如果文件名上有扩展名（如 <strong>.flv</strong>），则表达式会将其剥离，并将其替换为**.mp3**。</p><p>如果字符串包含新的请求参数，则以前的请求参数将追加到这些参数之后。如果不需要这样做，则在替换字符串的末尾放置一个问号可以避免附加它们，例如：<em>replacement</em></p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">rewrite</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">^/users/(.*)$</span><span style="color:#E1E4E8;"> /show?user=$1?</span><span style="color:#79B8FF;"> last</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="last与break" tabindex="-1">last与break <a class="header-anchor" href="#last与break" aria-hidden="true">#</a></h2><p><code>last</code>：如果当前规则不匹配，停止处理后续rewrite规则，使用重写后的路径，重新搜索location及其块内指令</p><p><code>break</code>:如果当前规则不匹配，停止处理后续rewrite规则，执行{}块内其他指令</p><h3 id="不使用last和break" tabindex="-1">不使用last和break <a class="header-anchor" href="#不使用last和break" aria-hidden="true">#</a></h3><p>在root /home/AdminLTE-3.2.0/pages下创建一个1.txt，里面内容是<code>this is a file</code></p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> listen </span><span style="color:#E1E4E8;">8000;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> server_name </span><span style="color:#E1E4E8;">nginx-dev;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> rewrite_log </span><span style="color:#E1E4E8;">on;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">rewrite</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">^/old/(.*) /new/$</span><span style="color:#E1E4E8;">1;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">rewrite</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">^/new/(.*) /pages/$</span><span style="color:#E1E4E8;">1;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">#根目录</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> root </span><span style="color:#E1E4E8;">/home/AdminLTE-3.2.0;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">#首页</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> index </span><span style="color:#E1E4E8;">index.html index2.html index3.html;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">/pages/1.txt </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;this is rewrite test!&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>默认按顺序执行。</p><p>访问 <a href="http://192.168.56.105:8000/old/1.txt" target="_blank" rel="noreferrer">http://192.168.56.105:8000/old/1.txt</a></p><p>结果：<code>this is rewrite test!</code></p><p>日志：</p><div class="language-latex line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">latex</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">[notice] 26837#26837: *1181 &quot;^/old/(.*)&quot; matches &quot;/old/1.txt&quot;, client: 192.168.56.1, server: nginx-dev, request: &quot;GET /old/1.txt HTTP/1.1&quot;, host: &quot;192.168.56.105:8000&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">[notice] 26837#26837: *1181 rewritten data: &quot;/new/1.txt&quot;, args: &quot;&quot;, client: 192.168.56.1, server: nginx-dev, request: &quot;GET /old/1.txt HTTP/1.1&quot;, host: &quot;192.168.56.105:8000&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">[notice] 26837#26837: *1181 &quot;^/new/(.*)&quot; matches &quot;/new/1.txt&quot;, client: 192.168.56.1, server: nginx-dev, request: &quot;GET /old/1.txt HTTP/1.1&quot;, host: &quot;192.168.56.105:8000&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">[notice] 26837#26837: *1181 rewritten data: &quot;/pages/1.txt&quot;, args: &quot;&quot;, client: 192.168.56.1, server: nginx-dev, request: &quot;GET /old/1.txt HTTP/1.1&quot;, host: &quot;192.168.56.105:8000&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="使用break" tabindex="-1">使用break <a class="header-anchor" href="#使用break" aria-hidden="true">#</a></h3><p>访问 <a href="http://192.168.56.105:8000/old/1.txt" target="_blank" rel="noreferrer">http://192.168.56.105:8000/old/1.txt</a></p><p>1.匹配到了<code>rewrite ^/old/(.*) /new/$1</code></p><p>2.<code>**break**</code>指令不执行后续的rewrite规则,以新的<code>/new/1.txt</code>路径去执行块内的其他指令</p><p>\\3. 去<code>root</code>目录下寻找文件, 由于不再村<code>/home/AdminLTE-3.2.0/new/1.txt</code>这个文件，返回404</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> listen </span><span style="color:#E1E4E8;">8000;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> server_name </span><span style="color:#E1E4E8;">nginx-dev;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> rewrite_log </span><span style="color:#E1E4E8;">on;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">rewrite</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">^/old/(.*) /new/$</span><span style="color:#E1E4E8;">1 </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">rewrite</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">^/new/(.*) /pages/$</span><span style="color:#E1E4E8;">1;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">#根目录</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> root </span><span style="color:#E1E4E8;">/home/AdminLTE-3.2.0;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">#首页</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> index </span><span style="color:#E1E4E8;">index.html index2.html index3.html;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">/pages/1.txt </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;this is rewrite test!&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>访问 <a href="http://192.168.56.105:8000/old/1.txt" target="_blank" rel="noreferrer">http://192.168.56.105:8000/old/1.txt</a></p><p>结果：</p><p><img src="https://raw.githubusercontent.com/DunXi/images/main/img/1660113329221-e8f2be96-2c99-4d9c-a3a7-ac6ea48f5992.png" alt="img"></p><p>访问日志：</p><div class="language-latex line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">latex</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">[notice] 26772#26772: *1179 &quot;^/old/(.*)&quot; matches &quot;/old/1.txt&quot;, client: 192.168.56.1, server: nginx-dev, request: &quot;GET /old/1.txt HTTP/1.1&quot;, host: &quot;192.168.56.105:8000&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">[notice] 26772#26772: *1179 rewritten data: &quot;/new/1.txt&quot;, args: &quot;&quot;, client: 192.168.56.1, server: nginx-dev, request: &quot;GET /old/1.txt HTTP/1.1&quot;, host: &quot;192.168.56.105:8000&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">[error] 26772#26772: *1179 open() &quot;/home/AdminLTE-3.2.0/new/1.txt&quot; failed (2: No such file or directory), client: 192.168.56.1, server: nginx-dev, request: &quot;GET /old/1.txt HTTP/1.1&quot;, host: &quot;192.168.56.105:8000&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="使用last" tabindex="-1">使用last <a class="header-anchor" href="#使用last" aria-hidden="true">#</a></h3><p>访问 <a href="http://192.168.56.105:8000/old/1.txt" target="_blank" rel="noreferrer">http://192.168.56.105:8000/old/1.txt</a></p><p>1.匹配到了<code>rewrite ^/old/(.*) /new/$1</code></p><p>2.<code>**last**</code>指令不执行后续的rewrite规则,以新的<code>/new/1.txt</code>路径去匹配location</p><p>3.先匹配到<code>location /</code>, 有匹配到location里的<code>rewrite ^/new/(.*) /pages/$1</code>规则，重定向到</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#e1e4e8;">/pages/1.txt</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>4.匹配到了<code>location /pages/1.txt</code> ，于是返回了<code>this is rewrite test!</code></p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> listen </span><span style="color:#E1E4E8;">8000;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> server_name </span><span style="color:#E1E4E8;">nginx-dev;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> rewrite_log </span><span style="color:#E1E4E8;">on;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">rewrite</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">^/old/(.*) /new/$</span><span style="color:#E1E4E8;">1</span><span style="color:#79B8FF;"> last</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">rewrite</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">^/new/(.*) /pages/$</span><span style="color:#E1E4E8;">1;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">#根目录</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> root </span><span style="color:#E1E4E8;">/home/AdminLTE-3.2.0;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">#首页</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> index </span><span style="color:#E1E4E8;">index.html index2.html index3.html;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">/pages/1.txt </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;this is rewrite test!&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>访问 <a href="http://192.168.56.105:8000/old/1.txt" target="_blank" rel="noreferrer">http://192.168.56.105:8000/old/1.txt</a></p><p>结果：<code>this is rewrite test!</code></p><p>日志：</p><div class="language-latex line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">latex</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">[notice] 26969#26969: *1185 &quot;^/old/(.*)&quot; matches &quot;/old/1.txt&quot;, client: 192.168.56.1, server: nginx-dev, request: &quot;GET /old/1.txt HTTP/1.1&quot;, host: &quot;192.168.56.105:8000&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">[notice] 26969#26969: *1185 rewritten data: &quot;/new/1.txt&quot;, args: &quot;&quot;, client: 192.168.56.1, server: nginx-dev, request: &quot;GET /old/1.txt HTTP/1.1&quot;, host: &quot;192.168.56.105:8000&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">[notice] 26969#26969: *1185 &quot;^/old/(.*)&quot; does not match &quot;/new/1.txt&quot;, client: 192.168.56.1, server: nginx-dev, request: &quot;GET /old/1.txt HTTP/1.1&quot;, host: &quot;192.168.56.105:8000&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">[notice] 26969#26969: *1185 &quot;^/new/(.*)&quot; matches &quot;/new/1.txt&quot;, client: 192.168.56.1, server: nginx-dev, request: &quot;GET /old/1.txt HTTP/1.1&quot;, host: &quot;192.168.56.105:8000&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">[notice] 26969#26969: *1185 rewritten data: &quot;/pages/1.txt&quot;, args: &quot;&quot;, client: 192.168.56.1, server: nginx-dev, request: &quot;GET /old/1.txt HTTP/1.1&quot;, host: &quot;192.168.56.105:8000&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>参考文档：</p><p><a href="https://www.nginx.com/blog/creating-nginx-rewrite-rules/" target="_blank" rel="noreferrer">https://www.nginx.com/blog/creating-nginx-rewrite-rules/</a></p><p><a href="https://nginx.org/en/docs/http/ngx_http_rewrite_module.html#return" target="_blank" rel="noreferrer">https://nginx.org/en/docs/http/ngx_http_rewrite_module.html</a></p><p><a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html" target="_blank" rel="noreferrer">https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html</a></p><h1 id="_10-其他常见指令" tabindex="-1"><strong>10.其他常见指令</strong> <a class="header-anchor" href="#_10-其他常见指令" aria-hidden="true">#</a></h1><h3 id="gzip压缩" tabindex="-1">gzip压缩 <a class="header-anchor" href="#gzip压缩" aria-hidden="true">#</a></h3><p>压缩响应通常会显著减小传输数据的大小。但是，由于压缩发生在运行时，因此它还会增加相当大的处理开销，从而对性能产生负面影响。NGINX在将响应发送到客户端之前执行压缩，但如果后端服务器已经对内容进行了压缩，则nginx不会再压缩。</p><p>若要启用压缩，请在参数中包含 <a href="https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip" target="_blank" rel="noreferrer">gzip</a> 指令。</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">gzip </span><span style="color:#E1E4E8;">on; </span></span>
<span class="line"><span style="color:#F97583;">gzip_types </span><span style="color:#E1E4E8;">text/plain application/xml; </span></span>
<span class="line"><span style="color:#F97583;">gzip_min_length </span><span style="color:#E1E4E8;">1000; </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>默认情况下，NGINX仅使用压缩MIME类型是<code>text/html</code>的响应。若要使用其他 MIME 类型压缩响应，可以使用 <a href="https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_types" target="_blank" rel="noreferrer">gzip_types</a> 指令并列出其他类型。</p><p>若要指定压缩响应的最小长度，请使用 <a href="https://nginx.org/en/docs/http/ngx_http_gzip_module.html#gzip_min_length" target="_blank" rel="noreferrer">gzip_min_length</a> 指令。默认值为 20 个字节（此处调整为 1000)。</p><h3 id="sendfile" tabindex="-1">sendfile <a class="header-anchor" href="#sendfile" aria-hidden="true">#</a></h3><p>默认情况下，NGINX处理文件传输本身，并在发送之前将文件复制到缓冲区中。启用 <a href="https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile" target="_blank" rel="noreferrer">sendfile</a> 指令可消除将数据复制到缓冲区的步骤，直接将一个文件复制到另一个文件。</p><p>启用sendfile，类似Java中的零拷贝（zero copy）</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/download </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;"> sendfile </span><span style="color:#E1E4E8;">         </span><span style="color:#79B8FF;"> on</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;"> tcp_nopush </span><span style="color:#E1E4E8;">       </span><span style="color:#79B8FF;"> on</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">#... </span></span>
<span class="line"><span style="color:#E1E4E8;">} </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>将 <a href="https://nginx.org/en/docs/http/ngx_http_core_module.html#tcp_nopush" target="_blank" rel="noreferrer">tcp_nopush</a> 指令与 <a href="https://nginx.org/en/docs/http/ngx_http_core_module.html#sendfile" target="_blank" rel="noreferrer">sendfile</a> 指令一起使用。这使NGINX能够在获得数据块后立即在一个数据包中发送HTTP响应标头。</p><h3 id="try-files" tabindex="-1">try_files <a class="header-anchor" href="#try-files" aria-hidden="true">#</a></h3><p><a href="https://nginx.org/en/docs/http/ngx_http_core_module.html#try_files" target="_blank" rel="noreferrer">try_files</a>指令可用于检查指定的文件或目录是否存在;如果不存在，则重定向到指定位置。</p><p>如下，如果原始URI对应的文件不存在，NGINX将内部重定向到<code>/www/data/images/default.gif</code></p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> root </span><span style="color:#E1E4E8;">/www/data;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/images/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> try_files </span><span style="color:#E1E4E8;">$uri /images/default.gif;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>最后一个参数也可以是状态代码（状态码之前需要加上等号）。</p><p>在下面的示例中，如果指令的所有参数都无法解析为现有文件或目录，则会返回404错误。</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> try_files </span><span style="color:#E1E4E8;">$uri $uri/ $uri.html </span><span style="color:#79B8FF;">=404</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>在下一个示例中，如果原始 URI 和附加尾随斜杠的 URI 都没有解析到现有文件或目录中，则请求将重定向到命名位置，该位置会将其传递到代理服务器。</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> try_files </span><span style="color:#E1E4E8;">$uri $uri/ @backend;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">@backend </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> proxy_pass </span><span style="color:#E1E4E8;">http://backend.example.com;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="error-page" tabindex="-1">error_page <a class="header-anchor" href="#error-page" aria-hidden="true">#</a></h3><p>为错误指定显示的页面。值可以包含变量。</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">error_page </span><span style="color:#E1E4E8;">404             /404.html; </span></span>
<span class="line"><span style="color:#F97583;">error_page </span><span style="color:#E1E4E8;">500 </span><span style="color:#79B8FF;">502</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">503</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">504</span><span style="color:#E1E4E8;"> /50x.html;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>参考文档：</p><p><a href="https://docs.nginx.com/nginx/admin-guide/web-server/compression/" target="_blank" rel="noreferrer">https://docs.nginx.com/nginx/admin-guide/web-server/compression/</a></p><p><a href="https://docs.nginx.com/nginx/admin-guide/web-server/serving-static-content/" target="_blank" rel="noreferrer">https://docs.nginx.com/nginx/admin-guide/web-server/serving-static-content/</a></p><h1 id="_11-推荐写法及注意事项" tabindex="-1"><strong>11.推荐写法及注意事项</strong> <a class="header-anchor" href="#_11-推荐写法及注意事项" aria-hidden="true">#</a></h1><h2 id="一、推荐写法" tabindex="-1">一、推荐写法 <a class="header-anchor" href="#一、推荐写法" aria-hidden="true">#</a></h2><h3 id="_1-重复的配置可继承自父级" tabindex="-1">1.重复的配置可继承自父级 <a class="header-anchor" href="#_1-重复的配置可继承自父级" aria-hidden="true">#</a></h3><p>例如：</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;"> server_name </span><span style="color:#E1E4E8;">www.example.com;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> root </span><span style="color:#E1E4E8;">/var/www/nginx-default/;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># [...]</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/foo </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> root </span><span style="color:#E1E4E8;">/var/www/nginx-default/;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># [...]</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/bar </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> root </span><span style="color:#E1E4E8;">/some/other/place;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;"># [...]</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>推荐写法</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> server_name </span><span style="color:#E1E4E8;">www.example.com;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> root </span><span style="color:#E1E4E8;">/var/www/nginx-default/;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># root继承父级配置</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># [...]</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/foo </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># root继承父级配置</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># [...]</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/bar </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># 覆盖</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> root </span><span style="color:#E1E4E8;">/some/other/place;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># [...]</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>这样在添加新的location时，可以避免重复配置。</p><h3 id="_2-不要将所有请求都代理到后端服务器" tabindex="-1">2.不要将所有请求都代理到后端服务器 <a class="header-anchor" href="#_2-不要将所有请求都代理到后端服务器" aria-hidden="true">#</a></h3><p>不推荐：</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> proxy_pass </span><span style="color:#E1E4E8;">http://localhost:8088;        </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>考虑到很多请求是访问静态内容（如图片，css，javascript等文件）,可以使用缓存或者配置静态目录来减少发送到后端的请求数量，这样可以减小后端服务器的开销。</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> listen </span><span style="color:#E1E4E8;">8002;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> server_name </span><span style="color:#E1E4E8;">ruoyi.tomcat;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> root </span><span style="color:#E1E4E8;">/home/www/static;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> try_files </span><span style="color:#E1E4E8;">$uri $uri/ @proxy;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">@proxy </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_set_header </span><span style="color:#E1E4E8;">Host $http_host;</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_set_header </span><span style="color:#E1E4E8;">X-Real-IP $remote_addr;</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_set_header </span><span style="color:#E1E4E8;">X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> proxy_pass </span><span style="color:#E1E4E8;">http://localhost:8080;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="_3-若非必要-不要缓存动态请求-只缓存静态文件" tabindex="-1">3.若非必要，不要缓存动态请求，只缓存静态文件 <a class="header-anchor" href="#_3-若非必要-不要缓存动态请求-只缓存静态文件" aria-hidden="true">#</a></h3><p>nginx关于缓存的指令非常多</p><p>​ <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache" target="_blank" rel="noreferrer">proxy_cache</a> ​ <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_background_update" target="_blank" rel="noreferrer">proxy_cache_background_update</a> ​ <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_bypass" target="_blank" rel="noreferrer">proxy_cache_bypass</a> ​ <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_convert_head" target="_blank" rel="noreferrer">proxy_cache_convert_head</a> ​ <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_key" target="_blank" rel="noreferrer">proxy_cache_key</a> ​ <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_lock" target="_blank" rel="noreferrer">proxy_cache_lock</a> ​ <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_lock_age" target="_blank" rel="noreferrer">proxy_cache_lock_age</a> ​ <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_lock_timeout" target="_blank" rel="noreferrer">proxy_cache_lock_timeout</a> ​ <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_max_range_offset" target="_blank" rel="noreferrer">proxy_cache_max_range_offset</a> ​ <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_methods" target="_blank" rel="noreferrer">proxy_cache_methods</a> ​ <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_min_uses" target="_blank" rel="noreferrer">proxy_cache_min_uses</a> ​ <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_path" target="_blank" rel="noreferrer">proxy_cache_path</a> ​ <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_purge" target="_blank" rel="noreferrer">proxy_cache_purge</a> ​ <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_revalidate" target="_blank" rel="noreferrer">proxy_cache_revalidate</a> ​ <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_use_stale" target="_blank" rel="noreferrer">proxy_cache_use_stale</a> ​ <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_valid" target="_blank" rel="noreferrer">proxy_cache_valid</a> ​ <a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_no_cache" target="_blank" rel="noreferrer">proxy_no_cache</a></p><p>由于nginx服务端缓存非常复杂，在使用缓存的时候，我们要清楚的知道在什么条件下，哪些文件会被缓存。</p><p>在配置文件中，最好能够清晰的指定哪些文件使用缓存。</p><h3 id="_4-检查文件是否存在使用try-files代替if-f" tabindex="-1">4.检查文件是否存在使用try_files代替if -f <a class="header-anchor" href="#_4-检查文件是否存在使用try-files代替if-f" aria-hidden="true">#</a></h3><p>不推荐用法：</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> root </span><span style="color:#E1E4E8;">/var/www/example.com;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!-f </span><span style="color:#E1E4E8;">$request_filename) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>推荐用法：</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> root </span><span style="color:#E1E4E8;">/var/www/example.com;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/ </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#F97583;"> try_files </span><span style="color:#E1E4E8;">$uri $uri/ /index.html;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_5-在重写路径中包含http-或https" tabindex="-1">5.在重写路径中包含<a href="http://xn--https-wm6j" target="_blank" rel="noreferrer">http://或https</a>😕/ <a class="header-anchor" href="#_5-在重写路径中包含http-或https" aria-hidden="true">#</a></h3><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#6A737D;">#推荐写法</span></span>
<span class="line"><span style="color:#F97583;">rewrite</span><span style="color:#E1E4E8;"> ^ http://example.com </span><span style="color:#F97583;">permanent</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#不推荐的写法</span></span>
<span class="line"><span style="color:#F97583;">rewrite</span><span style="color:#E1E4E8;"> ^ example.com </span><span style="color:#F97583;">permanent</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_6-保持重写规则简单干净" tabindex="-1">6.保持重写规则简单干净 <a class="header-anchor" href="#_6-保持重写规则简单干净" aria-hidden="true">#</a></h3><p>例如下面的这个例子可以变得更简单易懂。</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#6A737D;">#复杂的写法</span></span>
<span class="line"><span style="color:#F97583;">rewrite</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">^/(.*)$</span><span style="color:#E1E4E8;"> http://example.com/$1 </span><span style="color:#F97583;">permanent</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">#简单有效的写法</span></span>
<span class="line"><span style="color:#F97583;">rewrite</span><span style="color:#E1E4E8;"> </span><span style="color:#DBEDFF;">^ http://example.com$</span><span style="color:#E1E4E8;">request_uri? </span><span style="color:#F97583;">permanent</span><span style="color:#E1E4E8;">; </span></span>
<span class="line"><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">301</span><span style="color:#E1E4E8;"> http://example.com$request_uri; </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="二、注意事项" tabindex="-1">二、注意事项 <a class="header-anchor" href="#二、注意事项" aria-hidden="true">#</a></h2><h3 id="_1-正确的配置未生效-请清除浏览器缓存" tabindex="-1">1.正确的配置未生效，请清除浏览器缓存 <a class="header-anchor" href="#_1-正确的配置未生效-请清除浏览器缓存" aria-hidden="true">#</a></h3><p>当你确定修改的配置的正确的，但是未生效，请清除浏览器缓存或者禁用浏览器缓存。</p><h3 id="_2-在https中不启用-sslv3" tabindex="-1">2.在HTTPS中不启用 SSLv3 <a class="header-anchor" href="#_2-在https中不启用-sslv3" aria-hidden="true">#</a></h3><p>由于 SSLv3 中存在 POODLE 漏洞，建议不要在启用了 SSL 的站点中使用 SSLv3。您可以使用以下行非常轻松地禁用 SSLv3，并仅提供 TLS 协议：</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">ssl_protocols </span><span style="color:#E1E4E8;">TLSv1 TLSv1.1 TLSv1.2;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_3-不要将-root-目录配置成-或-root。" tabindex="-1">3.不要将 root 目录配置成 <code>/</code>或 <code>/root</code>。 <a class="header-anchor" href="#_3-不要将-root-目录配置成-或-root。" aria-hidden="true">#</a></h3><p>错误用法</p><div class="language-nginx line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki github-dark" tabindex="0"><code><span class="line"><span style="color:#F97583;">server</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">#错误用法</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#F97583;"> root </span><span style="color:#E1E4E8;">/;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">location</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">/project/path </span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">#错误用法</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;"> root </span><span style="color:#E1E4E8;">/root;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_4-谨慎使用chmod-777" tabindex="-1">4.谨慎使用chmod 777 <a class="header-anchor" href="#_4-谨慎使用chmod-777" aria-hidden="true">#</a></h3><p>这可能是解决问题最简单的方式，同时也说明，你没有真的弄清楚哪里出了问题。</p><p>可以使用<code>namei -om /path/to/check</code>显示路径上的所有权限，并找到问题的根本原因。</p><h3 id="_5-不要将部署的项目拷贝到默认目录下" tabindex="-1">5.不要将部署的项目拷贝到默认目录下 <a class="header-anchor" href="#_5-不要将部署的项目拷贝到默认目录下" aria-hidden="true">#</a></h3><p>升级或更新nginx的时候，默认目录可能被覆盖。</p><p>参考文档：</p><p><a href="https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/" target="_blank" rel="noreferrer">https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/</a></p><p><a href="https://www.nginx.com/resources/wiki/start/topics/depth/ifisevil/" target="_blank" rel="noreferrer">https://www.nginx.com/resources/wiki/start/topics/depth/ifisevil/</a></p>`,433),r=[p];function o(t,c,i,E,b,d){return a(),n("div",null,r)}const h=s(l,[["render",o]]);export{u as __pageData,h as default};
